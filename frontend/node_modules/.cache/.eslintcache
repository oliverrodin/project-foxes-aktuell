[{"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\index.js":"1","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\App.js":"2","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Login.js":"3","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Registration.js":"4","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Context\\LoginContext.js":"5","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Navbar.js":"6","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\CreateReport.js":"7","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Home.js":"8","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Button.js":"9","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\CustomSelect.js":"10","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\CustomTextInput.js":"11","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Project.js":"12"},{"size":157,"mtime":1646834548799,"results":"13","hashOfConfig":"14"},{"size":1436,"mtime":1647859264716,"results":"15","hashOfConfig":"14"},{"size":1951,"mtime":1647501038813,"results":"16","hashOfConfig":"14"},{"size":2242,"mtime":1647858114219,"results":"17","hashOfConfig":"14"},{"size":88,"mtime":1647441849834,"results":"18","hashOfConfig":"14"},{"size":2427,"mtime":1647954642866,"results":"19","hashOfConfig":"14"},{"size":5374,"mtime":1647526701240,"results":"20","hashOfConfig":"14"},{"size":4688,"mtime":1647859343036,"results":"21","hashOfConfig":"14"},{"size":794,"mtime":1647265704228,"results":"22","hashOfConfig":"14"},{"size":442,"mtime":1647252256041,"results":"23","hashOfConfig":"14"},{"size":452,"mtime":1647441849833,"results":"24","hashOfConfig":"14"},{"size":7948,"mtime":1647953900280,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"w3ig0z",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"29"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"29"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\index.js",[],[],["70","71"],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\App.js",["72","73","74","75"],[],"import './App.css';\r\nimport { useEffect, useState } from 'react'\r\nimport {BrowserRouter, Routes, Route, Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\n//Pages\r\nimport Home from './Pages/Home'\r\nimport CreateReport from './Pages/CreateReport'\r\nimport Navbar from './Pages/Navbar'\r\nimport Login from './Pages/Login'\r\nimport Registration from './Pages/Registration';\r\nimport Project from './Pages/Project'\r\n\r\nimport { LoginContext } from './Context/LoginContext'\r\n\r\nfunction App() {\r\n  const [name, setName] = useState(\"\");\r\n  const [loginId, setLoginId] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n \r\n  useEffect(() => {\r\n    axios.get('http://localhost:3001/auth/getuser', { headers: { accessToken: sessionStorage.getItem(\"accessToken\")}}).then((response) => {\r\n      setLoginId(response.data.id)\r\n      setName(response.data.name)\r\n    })\r\n  })\r\n  return (\r\n    <LoginContext.Provider value={{name, loginId}}>\r\n      <BrowserRouter>\r\n        \r\n              \r\n        <Routes>\r\n          \r\n          <Route path=\"/\" element= {<Login />} />\r\n          <Route path=\"/registration\" element={<Registration/>} />\r\n          <Route path=\"/home\" element={<Home />} />\r\n          <Route path=\"/createreport\" element={<CreateReport />} />\r\n          <Route path=\"/project\" element={<Project/>} />\r\n        </Routes> \r\n      </BrowserRouter>\r\n    </LoginContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Login.js",["76","77","78","79"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {Formik, Form} from 'formik'\r\nimport axios from 'axios'\r\nimport \"./Login.css\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\n//PAge\r\nimport CustomSelect from '../Components/CustomSelect'\r\n\r\n\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    let navigate = useNavigate();\r\n    \r\n  const login = () => {\r\n    const data = {username: username, password: password}\r\n      axios.post(\"http://localhost:3001/auth/login\", data,\r\n      {headers: { accessToken: sessionStorage.getItem(\"accessToken\") }}).then(\r\n          (response) => {\r\n            console.log(response.data)\r\n              if (response.data.error) {\r\n                 alert(response.data.error)\r\n              } else {\r\n                sessionStorage.setItem(\"accessToken\", response.data );\r\n                navigate(\"/home\");  \r\n              }\r\n              \r\n          }\r\n      )\r\n        \r\n  }\r\n  return (\r\n      \r\n    <div>\r\n        <div className=\"login-div\">\r\n        <div className=\"logo\"></div>\r\n        \r\n        <div className=\"title\">Foxes Timereports</div>\r\n        <div className=\"sub-title\">2022</div>\r\n        <div className=\"fields\">\r\n            <div className=\"username\"><input \r\n          type=\"text\" placeholder=\"Username\"\r\n          onChange={(event) => {\r\n              setUsername(event.target.value)\r\n          }} \r\n        /></div>\r\n            <div className=\"password\"><input \r\n          type=\"password\" placeholder=\"Password\"\r\n          onChange={(event) => {\r\n              setPassword(event.target.value)\r\n          }}  /></div>\r\n        </div>\r\n        <button className=\"signin-button\" onClick={login}>Login</button>\r\n        <div className=\"link\">\r\n        <Link to=\"/registration\">Sign up</Link>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Registration.js",["80","81","82"],[],"import React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport './Registration.css';\r\nimport {Link} from 'react-router-dom'\r\n\r\n//Pages\r\nimport CustomTextInput from '../Components/CustomTextInput'\r\nimport axios from 'axios';\r\n\r\nfunction Registration() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n    <div className='registration-div'>\r\n    <div className=\"logo\"></div>\r\n        \r\n        <div className=\"title\">Foxes Timereports</div>\r\n        <div className=\"sub-title\">2022</div>\r\n        <div className=\"fields\">\r\n      <Formik\r\n      initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          \r\n\r\n\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n          username: Yup.string().min(3).max(15).required(),\r\n          password: Yup.string().min(4).max(20).required(),\r\n          email: Yup.string().required(),\r\n          name: Yup.string().required()\r\n\r\n      })}\r\n      onSubmit={ (values, {setSubmitting, resetForm}) => {\r\n        axios.post('http://localhost:3001/auth', values)\r\n             .then((res) => {\r\n               console.log(res)\r\n             })\r\n        \r\n        \r\n        resetForm();\r\n        setSubmitting(false)\r\n        navigate('/')     \r\n      }}\r\n        >\r\n          \r\n          {props => (\r\n            <Form>\r\n              <CustomTextInput className=\"username\" placeholder=\"Name\" input type=\"text\" name=\"name\"  />\r\n              <CustomTextInput className=\"username\" placeholder=\"Email \" name=\"email\" type=\"email\" />\r\n              <CustomTextInput className=\"username\" placeholder=\"Username \" name=\"username\" type=\"text\" />\r\n              <CustomTextInput className=\"username\" placeholder=\"Password\" name=\"password\" type=\"password\" /> \r\n              <button type='submit' className=\"registration-button\">{props.isSubmitting ? 'loading...' : 'Register'}</button>\r\n              <div className=\"link\">\r\n        <Link to=\"/\">Back to Login</Link>\r\n        </div>\r\n            </Form>\r\n\r\n          )}  \r\n          \r\n      </Formik>\r\n      </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Registration","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Context\\LoginContext.js",[],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Navbar.js",["83","84","85","86","87","88","89","90","91","92"],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\CreateReport.js",["93","94","95","96","97","98","99","100"],[],"import {React, useContext, useEffect, useState}from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport axios from \"axios\";\r\nimport { LoginContext } from \"../Context/LoginContext\";\r\nimport './CreateReport.css'\r\nimport Navbar from './Navbar'\r\n\r\nconst database_id = '58d96ae9275547a7960f5cca7c93e836'\r\n\r\nconst CustomTextInput = ({label, ...props}) => {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field}{...props} />\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nconst CustomCheckbox = ({children, ...props}) => {\r\n  const [field, meta] = useField(props, 'checkbox')\r\n\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input type=\"checkbox\" {...field}{...props} />\r\n        {children}\r\n      </label>\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nconst CustomSelect = ({label, ...props}) => {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <select {...field}{...props} />\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction CreateReport() {\r\n    const [project, setProject] = useState([])\r\n    const [person, setPerson] = useState([])\r\n    const { name, loginId } = useContext(LoginContext)\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(()  => {\r\n     axios.post(\"http://localhost:3001/getdatabase/project\", {data: \"\"}, { headers: {\r\n      accessToken: sessionStorage.getItem(\"accessToken\")\r\n    }}).then((response) => {\r\n        setProject(response.data)\r\n        \r\n      }) \r\n\r\n    }, [])\r\n\r\n    console.log(project)\r\n\r\n    /* const Projects = () => {\r\n      return(\r\n        <>\r\n          <options></option>\r\n        </>\r\n      )\r\n    } */\r\n    \r\n    // const onSubmit = (data) => {\r\n\r\n    //     fetch('http://localhost:3001/createtimereports',{\r\n    //     method: 'POST',\r\n    //     url: 'https://api.notion.com/v1/pages',\r\n    //     body: (\r\n    //       JSON.stringify(data)),\r\n    //     headers: { \"Content-Type\": 'application/json',\r\n    //                 accessToken: sessionStorage.getItem(\"accessToken\")}\r\n    //   }) \r\n      \r\n    //    console.log(JSON.stringify(data))\r\n      \r\n    // };\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n      <div className='createReportPage'>\r\n        <Formik\r\n          initialValues={{\r\n            \r\n            project: \"\",\r\n            date: \"\",\r\n            hours: \"\",\r\n            note:\"\",\r\n            comment:\"\"\r\n          }}\r\n          validationSchema={\r\n            Yup.object().shape({\r\n            project: Yup.string().required(),\r\n            date: Yup.date().required(),\r\n            hours:Yup.number().required(),\r\n            note: Yup.string().required(),\r\n            comment: Yup.string().required()\r\n          })}\r\n          onSubmit={(values, {setSubmitting, resetForm}) => {\r\n            axios\r\n              .post('http://localhost:3001/createtimereports', \r\n                values,\r\n                {\r\n                  headers: {\r\n                    accessToken: sessionStorage.getItem(\"accessToken\")\r\n                  }\r\n                }\r\n              )\r\n              \r\n              setTimeout(() => {\r\n                navigate(\"/home\")\r\n                resetForm();\r\n                setSubmitting(false)\r\n              }, 2000)\r\n              \r\n              \r\n            // fetch('http://localhost:3001/createtimereports',{\r\n            //   method: 'POST',\r\n            //   url: 'https://api.notion.com/v1/pages',\r\n            //   body: (\r\n            //     JSON.stringify(values)),\r\n            //   headers: { \"Content-Type\": 'application/json'}\r\n            // }) \r\n\r\n            \r\n          }}\r\n          >\r\n          {props => (\r\n          <Form className=\"container\">\r\n            <h1>Create time report</h1>\r\n            <CustomSelect className=\"timeReportInput\" label=\"Project\" name=\"project\">\r\n              <option value=\"\">Select Project</option>  \r\n              {\r\n                project.map((pages) => {\r\n                  return (\r\n                    <>\r\n                      <option value={pages.id}>{pages.name}</option> \r\n                    </>\r\n                  )\r\n                  \r\n                })\r\n              }\r\n            </CustomSelect>   \r\n            <CustomTextInput className=\"timeReportInput\" label=\"Date\" name=\"date\" type=\"date\"/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Hours\" name=\"hours\" type=\"number\" placeholder='ex. 10...'/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Note\" name=\"note\" type=\"text\" placeholder='ex. meeting...'/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Comment\" name=\"comment\" type=\"text\" placeholder='ex. fixed this bug...'/>\r\n            \r\n            \r\n\r\n            <button type='submit' className=\"btnPos\">{props.isSubmitting ? 'loading...' : 'Submit'}</button>\r\n          </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default CreateReport;\r\n","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Home.js",["101","102","103","104"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport \"./Report.css\";\r\nimport { LoginContext } from '../Context/LoginContext'\r\nimport \"./Modal.css\"; \r\n\r\nimport Navbar from './Navbar'\r\n\r\nfunction Home() {\r\n  const [reports, setReports] = useState([]);\r\n  const [project, setProject] = useState([]);\r\n  const [hej, setHej] = useState([]);\r\n  const [popupcontent, setpopupcontent] = useState([]);\r\n  const [popuptoggle, setpopuptoggle] = useState(false);\r\n  const { name } = useContext(LoginContext);\r\n  const changeContent=(value)=>{\r\n    setpopupcontent([value]);\r\n    setpopuptoggle(!popuptoggle);\r\n  };\r\n\r\n\r\n  \r\n  \r\n  useEffect(() => {\r\n    axios\r\n      .post(\"http://localhost:3001/getdatabase/report\", {data: \"\"}, { headers: {accessToken: sessionStorage.getItem(\"accessToken\")} } )\r\n      .then((response) => {\r\n        setReports(response.data);\r\n        \r\n      });\r\n\r\n    axios\r\n      .post(\"http://localhost:3001/getdatabase/activeproject\", {data: \"\"}, { headers: {\r\n        accessToken: sessionStorage.getItem(\"accessToken\")\r\n      }})\r\n      .then((response) => {\r\n        setProject(response.data)\r\n      })\r\n      \r\n    \r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div className=\"home-section \">\r\n\r\n      <div className=\"project-container\">\r\n        <h2>Projekt <Link to=\"/project\" className=\"link\">\r\n            <i class=\"fa-solid fa-plus\" ></i>\r\n          </Link></h2>\r\n        <div className=\"project-grid\">\r\n          {\r\n            project.map((value) => {\r\n          \r\n                return (\r\n                  <div className=\"project-card\">\r\n                    <ul key={value.id} className=\"project-first-line\">\r\n                      <li className=\"project-lines\">| Projekt: {value.name} |</li>\r\n                      <li className=\"project-lines\"> Datum: {value.dateStart} -{\">\"} {value.dateEnd} |</li>\r\n                      <li className=\"project-lines\"> Status:\r\n                          <span className={value.color}>{value.status}</span> |\r\n                      </li>\r\n                    </ul>\r\n                    <ul className=\"project-second-line\">\r\n                      <li className=\"project-lines\">| Totaltid: {value.hours} timmar |</li>\r\n                      <li className=\"project-lines\">Jobbat: {value.hoursWorked} timmar |</li>\r\n                      <li className=\"project-lines\">Tid kvar: {value.hoursLeft} timmar |</li>\r\n                      \r\n                    </ul>\r\n                  </div>\r\n                )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      \r\n      <div className='report-container'>\r\n        <h2 className=\"report-header\">Mina tidsrapporter <Link to=\"/createreport\" className=\"link\">\r\n            <i class=\"fa-solid fa-plus\" ></i>\r\n          </Link>\r\n        </h2>\r\n        <h2 className=\"plus\"></h2>\r\n        {reports.map((value) => {\r\n          return (\r\n            <div className='report-card' onClick={()=>changeContent(value)}>\r\n              <ul key={value.id}>\r\n                <li className=\"report-lines\">Datum: {value.date}</li>\r\n                <li className=\"report-lines\">Projekt: {value.projectName}</li>                \r\n              </ul>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n          {/* Pop-Up-Modalen för varje tidrapport */}\r\n      {popuptoggle && \r\n      <div className=\"pop-up-container\" onClick={changeContent}>\r\n        <div className=\"pop-up-body\" onClick={(e)=>e.stopPropagation()}>\r\n            <div className=\"pop-up-header\">\r\n            <button className=\"modalbtn\" onClick={changeContent}> X </button>\r\n          </div>\r\n          <div className=\"pop-up-content\">\r\n            {popupcontent.map((pop)=>{\r\n              return (\r\n                <div className=\"pop-up-card\">\r\n                  <p className=\"text-line\">Namn: {pop.personName}</p>\r\n                  <p className=\"text-line\">Projekt: {pop.projectName}</p>\r\n                  <p className=\"text-line\">Datum: {pop.date}</p>\r\n                  <p className=\"text-line\">Timmar: {pop.hours}</p>\r\n                  <p className=\"text-line\">Anteckning: {pop.note}</p>\r\n                  <p className=\"text-line\">Kommentar: {pop.comment}</p>\r\n                  <form className=\"pop-up-input\">\r\n                  <label>\r\n                    Lägg till kommentar: \r\n                    <input type=\"text\" name=\"name\" />\r\n                  </label>\r\n                </form>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>}\r\n              {/* Slut på Pop-Up-Modalen */}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Button.js",[],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\CustomSelect.js",["105"],[],"import React from 'react'\r\nimport { Formik, useField } from \"formik\";\r\nfunction CustomSelect({label, ...props}) {\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n      <>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <select {...field}{...props} />\r\n        {meta.touch && meta.error ? (\r\n          <div className=\"error\">{meta.error}</div> ) : null}\r\n      </>\r\n    )\r\n}\r\n\r\nexport default CustomSelect","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\CustomTextInput.js",["106"],[],"import React from 'react'\r\nimport { Formik, useField} from 'formik'\r\n\r\nfunction CustomTextInput({label, ...props}) {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field}{...props} />\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomTextInput","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Project.js",["107","108","109"],[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":3,"column":39,"nodeType":"116","messageId":"117","endLine":3,"endColumn":43},{"ruleId":"114","severity":1,"message":"118","line":9,"column":8,"nodeType":"116","messageId":"117","endLine":9,"endColumn":14},{"ruleId":"114","severity":1,"message":"119","line":19,"column":10,"nodeType":"116","messageId":"117","endLine":19,"endColumn":20},{"ruleId":"114","severity":1,"message":"120","line":19,"column":22,"nodeType":"116","messageId":"117","endLine":19,"endColumn":35},{"ruleId":"114","severity":1,"message":"121","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"122","line":3,"column":9,"nodeType":"116","messageId":"117","endLine":3,"endColumn":15},{"ruleId":"114","severity":1,"message":"123","line":3,"column":17,"nodeType":"116","messageId":"117","endLine":3,"endColumn":21},{"ruleId":"114","severity":1,"message":"124","line":11,"column":8,"nodeType":"116","messageId":"117","endLine":11,"endColumn":20},{"ruleId":"114","severity":1,"message":"125","line":3,"column":24,"nodeType":"116","messageId":"117","endLine":3,"endColumn":29},{"ruleId":"114","severity":1,"message":"126","line":3,"column":31,"nodeType":"116","messageId":"117","endLine":3,"endColumn":43},{"ruleId":"114","severity":1,"message":"127","line":3,"column":45,"nodeType":"116","messageId":"117","endLine":3,"endColumn":53},{"ruleId":"114","severity":1,"message":"128","line":4,"column":9,"nodeType":"116","messageId":"117","endLine":4,"endColumn":15},{"ruleId":"114","severity":1,"message":"124","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":20},{"ruleId":"114","severity":1,"message":"129","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":13},{"ruleId":"114","severity":1,"message":"122","line":8,"column":9,"nodeType":"116","messageId":"117","endLine":8,"endColumn":15},{"ruleId":"114","severity":1,"message":"123","line":8,"column":17,"nodeType":"116","messageId":"117","endLine":8,"endColumn":21},{"ruleId":"114","severity":1,"message":"130","line":12,"column":12,"nodeType":"116","messageId":"117","endLine":12,"endColumn":18},{"ruleId":"114","severity":1,"message":"131","line":12,"column":20,"nodeType":"116","messageId":"117","endLine":12,"endColumn":29},{"ruleId":"114","severity":1,"message":"132","line":13,"column":12,"nodeType":"116","messageId":"117","endLine":13,"endColumn":18},{"ruleId":"114","severity":1,"message":"133","line":13,"column":20,"nodeType":"116","messageId":"117","endLine":13,"endColumn":29},{"ruleId":"114","severity":1,"message":"134","line":15,"column":12,"nodeType":"116","messageId":"117","endLine":15,"endColumn":18},{"ruleId":"114","severity":1,"message":"125","line":3,"column":24,"nodeType":"116","messageId":"117","endLine":3,"endColumn":29},{"ruleId":"114","severity":1,"message":"126","line":3,"column":31,"nodeType":"116","messageId":"117","endLine":3,"endColumn":43},{"ruleId":"114","severity":1,"message":"135","line":10,"column":7,"nodeType":"116","messageId":"117","endLine":10,"endColumn":18},{"ruleId":"114","severity":1,"message":"136","line":25,"column":7,"nodeType":"116","messageId":"117","endLine":25,"endColumn":21},{"ruleId":"114","severity":1,"message":"132","line":56,"column":12,"nodeType":"116","messageId":"117","endLine":56,"endColumn":18},{"ruleId":"114","severity":1,"message":"133","line":56,"column":20,"nodeType":"116","messageId":"117","endLine":56,"endColumn":29},{"ruleId":"114","severity":1,"message":"137","line":57,"column":13,"nodeType":"116","messageId":"117","endLine":57,"endColumn":17},{"ruleId":"114","severity":1,"message":"138","line":57,"column":19,"nodeType":"116","messageId":"117","endLine":57,"endColumn":26},{"ruleId":"114","severity":1,"message":"139","line":13,"column":10,"nodeType":"116","messageId":"117","endLine":13,"endColumn":13},{"ruleId":"114","severity":1,"message":"140","line":13,"column":15,"nodeType":"116","messageId":"117","endLine":13,"endColumn":21},{"ruleId":"114","severity":1,"message":"137","line":16,"column":11,"nodeType":"116","messageId":"117","endLine":16,"endColumn":15},{"ruleId":"141","severity":1,"message":"142","line":86,"column":9,"nodeType":"143","endLine":86,"endColumn":30},{"ruleId":"114","severity":1,"message":"122","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":16},{"ruleId":"114","severity":1,"message":"122","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":16},{"ruleId":"114","severity":1,"message":"144","line":3,"column":24,"nodeType":"116","messageId":"117","endLine":3,"endColumn":39},{"ruleId":"114","severity":1,"message":"145","line":14,"column":9,"nodeType":"116","messageId":"117","endLine":14,"endColumn":17},{"ruleId":"114","severity":1,"message":"146","line":26,"column":11,"nodeType":"116","messageId":"117","endLine":26,"endColumn":18},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'setIsLoggedIn' is assigned a value but never used.","'useEffect' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'CustomSelect' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'useField' is defined but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'person' is assigned a value but never used.","'setPerson' is assigned a value but never used.","'button' is assigned a value but never used.","'database_id' is assigned a value but never used.","'CustomCheckbox' is assigned a value but never used.","'name' is assigned a value but never used.","'loginId' is assigned a value but never used.","'hej' is assigned a value but never used.","'setHej' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'yupToFormErrors' is defined but never used.","'navigate' is assigned a value but never used.","'results' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
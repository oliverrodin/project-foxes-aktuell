[{"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\index.js":"1","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\App.js":"2","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Login.js":"3","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Registration.js":"4","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Context\\LoginContext.js":"5","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Navbar.js":"6","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\CreateReport.js":"7","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Home.js":"8","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Button.js":"9","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\CustomSelect.js":"10","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\CustomTextInput.js":"11","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Project.js":"12","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Footer.js":"13","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Spinner.js":"14","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Weeks.js":"15","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Chart.js":"16"},{"size":157,"mtime":1646834548799,"results":"17","hashOfConfig":"18"},{"size":1525,"mtime":1648198874147,"results":"19","hashOfConfig":"18"},{"size":1974,"mtime":1648032429213,"results":"20","hashOfConfig":"18"},{"size":2266,"mtime":1648032439803,"results":"21","hashOfConfig":"18"},{"size":88,"mtime":1647441849834,"results":"22","hashOfConfig":"18"},{"size":2431,"mtime":1648040097568,"results":"23","hashOfConfig":"18"},{"size":4385,"mtime":1648105651029,"results":"24","hashOfConfig":"18"},{"size":8665,"mtime":1648123622176,"results":"25","hashOfConfig":"18"},{"size":794,"mtime":1647265704228,"results":"26","hashOfConfig":"18"},{"size":442,"mtime":1647252256041,"results":"27","hashOfConfig":"18"},{"size":452,"mtime":1647441849833,"results":"28","hashOfConfig":"18"},{"size":9057,"mtime":1648551187409,"results":"29","hashOfConfig":"18"},{"size":710,"mtime":1648123622176,"results":"30","hashOfConfig":"18"},{"size":106,"mtime":1648123622175,"results":"31","hashOfConfig":"18"},{"size":9790,"mtime":1648552053136,"results":"32","hashOfConfig":"18"},{"size":1391,"mtime":1648216396147,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"w3ig0z",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"37"},"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\index.js",[],[],["92","93"],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\App.js",["94","95","96","97"],[],"import './App.css';\r\nimport { useEffect, useState } from 'react'\r\nimport {BrowserRouter, Routes, Route, Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\n//Pages\r\nimport Home from './Pages/Home'\r\nimport CreateReport from './Pages/CreateReport'\r\nimport Navbar from './Pages/Navbar'\r\nimport Login from './Pages/Login'\r\nimport Registration from './Pages/Registration';\r\nimport Project from './Pages/Project'\r\nimport Weeks from './Pages/Weeks'\r\n\r\nimport { LoginContext } from './Context/LoginContext'\r\n\r\nfunction App() {\r\n  const [name, setName] = useState(\"\");\r\n  const [loginId, setLoginId] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n \r\n  useEffect(() => {\r\n    axios.get('http://localhost:3001/auth/getuser', { headers: { accessToken: sessionStorage.getItem(\"accessToken\")}}).then((response) => {\r\n      setLoginId(response.data.id)\r\n      setName(response.data.name)\r\n    })\r\n  })\r\n  return (\r\n    <LoginContext.Provider value={{name, loginId}}>\r\n      <BrowserRouter>\r\n        \r\n              \r\n        <Routes>\r\n          \r\n          <Route path=\"/\" element= {<Login />} />\r\n          <Route path=\"/registration\" element={<Registration/>} />\r\n          <Route path=\"/home\" element={<Home />} />\r\n          <Route path=\"/createreport\" element={<CreateReport />} />\r\n          <Route path=\"/project\" element={<Project/>} />\r\n          <Route path=\"/week\" element={<Weeks/>}  />\r\n        </Routes> \r\n      </BrowserRouter>\r\n    </LoginContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Login.js",["98","99","100","101"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {Formik, Form} from 'formik'\r\nimport axios from 'axios'\r\nimport \"./Login.css\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\n//PAge\r\nimport CustomSelect from '../Components/CustomSelect'\r\n\r\n\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    let navigate = useNavigate();\r\n    \r\n  const login = () => {\r\n    const data = {username: username, password: password}\r\n      axios.post(\"http://localhost:3001/auth/login\", data,\r\n      {headers: { accessToken: sessionStorage.getItem(\"accessToken\") }}).then(\r\n          (response) => {\r\n            console.log(response.data)\r\n              if (response.data.error) {\r\n                 alert(response.data.error)\r\n              } else {\r\n                sessionStorage.setItem(\"accessToken\", response.data );\r\n                navigate(\"/home\");  \r\n              }\r\n              \r\n          }\r\n      )\r\n        \r\n  }\r\n  return (\r\n      \r\n    <div className='login-page'>\r\n        <div className=\"login-div\">\r\n        <div className=\"logo\"></div>\r\n        \r\n        <div className=\"title\">Foxes Timereports</div>\r\n        <div className=\"sub-title\">2022</div>\r\n        <div className=\"fields\">\r\n            <div className=\"username\"><input \r\n          type=\"text\" placeholder=\"Username\"\r\n          onChange={(event) => {\r\n              setUsername(event.target.value)\r\n          }} \r\n        /></div>\r\n            <div className=\"password\"><input \r\n          type=\"password\" placeholder=\"Password\"\r\n          onChange={(event) => {\r\n              setPassword(event.target.value)\r\n          }}  /></div>\r\n        </div>\r\n        <button className=\"signin-button\" onClick={login}>Login</button>\r\n        <div className=\"link\">\r\n        <Link to=\"/registration\">Sign up</Link>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Registration.js",["102","103","104"],[],"import React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport './Registration.css';\r\nimport {Link} from 'react-router-dom'\r\n\r\n//Pages\r\nimport CustomTextInput from '../Components/CustomTextInput'\r\nimport axios from 'axios';\r\n\r\nfunction Registration() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n    <div className='registration-div'>\r\n    <div className=\"logo\"></div>\r\n        \r\n        <div className=\"title\">Foxes Timereports</div>\r\n        <div className=\"sub-title-reg\">2022</div>\r\n        <div className=\"fields-reg\">\r\n      <Formik\r\n      initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          \r\n\r\n\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n          username: Yup.string().min(3).max(15).required(),\r\n          password: Yup.string().min(4).max(20).required(),\r\n          email: Yup.string().required(),\r\n          name: Yup.string().required()\r\n\r\n      })}\r\n      onSubmit={ (values, {setSubmitting, resetForm}) => {\r\n        axios.post('http://localhost:3001/auth', values)\r\n             .then((res) => {\r\n               console.log(res)\r\n             })\r\n        \r\n        \r\n        resetForm();\r\n        setSubmitting(false)\r\n        navigate('/')     \r\n      }}\r\n        >\r\n          \r\n          {props => (\r\n            <Form>\r\n              <CustomTextInput className=\"username-reg\" placeholder=\"Name\" input type=\"text\" name=\"name\"  />\r\n              <CustomTextInput className=\"username-reg\" placeholder=\"Email \" name=\"email\" type=\"email\" />\r\n              <CustomTextInput className=\"username-reg\" placeholder=\"Username \" name=\"username\" type=\"text\" />\r\n              <CustomTextInput className=\"username-reg\" placeholder=\"Password\" name=\"password\" type=\"password\" /> \r\n              <button type='submit' className=\"registration-button\">{props.isSubmitting ? 'loading...' : 'Register'}</button>\r\n              <div className=\"link\">\r\n        <Link to=\"/\">Back to Login</Link>\r\n        </div>\r\n            </Form>\r\n\r\n          )}  \r\n          \r\n      </Formik>\r\n      </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Registration","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Context\\LoginContext.js",[],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Navbar.js",["105","106","107","108","109","110","111","112","113","114"],[],"import React,{useState, useEffect, useContext} from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport './Navbar.css'\r\nimport {Button} from '../Components/Button.js'\r\nimport CustomSelect from \"../Components/CustomSelect\";\r\nimport { LoginContext } from '../Context/LoginContext'\r\nimport axios from \"axios\";\r\nimport {Formik, Form} from \"formik\";\r\n\r\n\r\nfunction App() {\r\n    const [filter, setFilter] = useState(\"\");  \r\n    const [person, setPerson] = useState([]);\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n    const { name } = useContext(LoginContext);\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n\r\n        if(window.innerWidth <= 960) {\r\n            setButton(false);\r\n        }\r\n\r\n        else {\r\n            setButton(true)\r\n        }\r\n\r\n    };\r\n    useEffect(() => {\r\n        \r\n        showButton();\r\n\r\n    }, []);\r\n    window.addEventListener('resize', showButton);\r\n\r\n    const logout = () => {\r\n        sessionStorage.clear()\r\n    }\r\n    \r\n\r\n  return (    \r\n    <nav className='navbar'>\r\n        <div className='navbar-container'>\r\n            <Link to=\"/home\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n                Foxes <i className='fa-solid fa-code'/> \r\n            </Link>\r\n            <div className='menu-icon' onClick={handleClick}>\r\n                <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n            </div>\r\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                {/* <li className='nav-item'>\r\n                    <Link to='/home' className='nav-links' onClick={closeMobileMenu}>\r\n                        Startsida\r\n                    </Link>\r\n                </li> */}\r\n                {/* <li className='nav-item'>\r\n                    <Link to='/createreport' className='nav-links' onClick={closeMobileMenu}>\r\n                        Skapa tidsrapport\r\n                    </Link>\r\n                </li> */}\r\n                <li className='user nav-links'>{name}</li>\r\n                <li className='nav-item'>\r\n                    <Link to='/' className='nav-links' onClick={logout}>\r\n                        Logga ut\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            \r\n           \r\n            \r\n        </div>\r\n    </nav>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\CreateReport.js",["115","116","117","118","119","120","121","122"],[],"import {React, useContext, useEffect, useState}from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport axios from \"axios\";\r\nimport { LoginContext } from \"../Context/LoginContext\";\r\nimport './CreateReport.css'\r\nimport Navbar from './Navbar'\r\n\r\nconst database_id = '58d96ae9275547a7960f5cca7c93e836'\r\n\r\nconst CustomTextInput = ({label, ...props}) => {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field}{...props} />\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nconst CustomCheckbox = ({children, ...props}) => {\r\n  const [field, meta] = useField(props, 'checkbox')\r\n\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input type=\"checkbox\" {...field}{...props} />\r\n        {children}\r\n      </label>\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nconst CustomSelect = ({label, ...props}) => {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <select {...field}{...props} />\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction CreateReport() {\r\n    const [project, setProject] = useState([])\r\n    const [person, setPerson] = useState([])\r\n    const { name, loginId } = useContext(LoginContext)\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(()  => {\r\n     axios.post(\"http://localhost:3001/getdatabase/project\", {data: \"\"}, { headers: {\r\n      accessToken: sessionStorage.getItem(\"accessToken\")\r\n    }}).then((response) => {\r\n        setProject(response.data)\r\n        \r\n      }) \r\n\r\n    }, [])\r\n\r\n    console.log(project)\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n      \r\n        <Formik\r\n          initialValues={{\r\n            \r\n            project: \"\",\r\n            date: \"\",\r\n            hours: \"\",\r\n            note:\"\",\r\n            comment:\"\"\r\n          }}\r\n          validationSchema={\r\n            Yup.object().shape({\r\n            project: Yup.string().required(),\r\n            date: Yup.date().required(),\r\n            hours:Yup.number().required(),\r\n            note: Yup.string().required(),\r\n            comment: Yup.string().required()\r\n          })}\r\n          onSubmit={(values, {setSubmitting, resetForm}) => {\r\n            axios\r\n              .post('http://localhost:3001/createtimereports', \r\n                values,\r\n                {\r\n                  headers: {\r\n                    accessToken: sessionStorage.getItem(\"accessToken\")\r\n                  }\r\n                }\r\n              )\r\n              \r\n              setTimeout(() => {\r\n                navigate(\"/home\")\r\n                resetForm();\r\n                setSubmitting(false)\r\n              }, 2000)\r\n\r\n          }}\r\n          >\r\n          {props => (\r\n          <Form className=\"container\">\r\n            <h1>Create time report</h1>\r\n            <CustomSelect className=\"timeReportInput\" label=\"Project\" name=\"project\">\r\n              <option value=\"\">Select Project</option>  \r\n              {\r\n                project.map((pages) => {\r\n                  return (\r\n                    <>\r\n                      <option value={pages.id}>{pages.name}</option> \r\n                    </>\r\n                  )\r\n                  \r\n                })\r\n              }\r\n            </CustomSelect>   \r\n            <CustomTextInput className=\"timeReportInput\" label=\"Date\" name=\"date\" type=\"date\"/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Hours\" name=\"hours\" type=\"number\" placeholder='ex. 10...'/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Note\" name=\"note\" type=\"text\" placeholder='ex. meeting...'/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Comment\" name=\"comment\" type=\"text\" placeholder='ex. fixed this bug...'/>\r\n            \r\n            \r\n\r\n            <button type='submit' className=\"btnPos\">{props.isSubmitting ? 'loading...' : 'Submit'}</button>\r\n          </Form>\r\n          )}\r\n        </Formik>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default CreateReport;\r\n","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Home.js",["123","124","125","126","127","128"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport \"./Report.css\";\r\nimport { LoginContext } from '../Context/LoginContext'\r\nimport \"./Modal.css\"; \r\nimport CustomSelect from \"../Components/CustomSelect\";\r\nimport CustomTextInput from \"../Components/CustomTextInput\"\r\nimport Navbar from './Navbar'\r\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport Footer from \"./Footer\";\r\nimport Spinner from \"../Components/Spinner\";\r\n\r\nfunction Home() {\r\n  const [reports, setReports] = useState([]);\r\n  const [project, setProject] = useState([]);\r\n  const [popupcontent, setpopupcontent] = useState([]);\r\n  const [popuptoggle, setpopuptoggle] = useState(false);\r\n  const [popuptoggle2, setpopuptoggle2] = useState(false);\r\n  const [isLoadingReports, setIsLoadingReports] = useState(true);\r\n  const [isLoadingProjects, setIsLoadingProjects] = useState(true);\r\n  \r\n  const changeContent=(value)=>{\r\n    setpopupcontent([value]);\r\n    setpopuptoggle(!popuptoggle);\r\n  };\r\n\r\n\r\n  const changeContent2=()=>{\r\n    setpopuptoggle2(!popuptoggle2)\r\n  }\r\n\r\n  function refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n  \r\n  \r\n  useEffect(() => {\r\n    axios\r\n      .post(\"http://localhost:3001/getdatabase/report\", {data: \"\"}, { headers: {accessToken: sessionStorage.getItem(\"accessToken\")} } )\r\n      .then((response) => {\r\n        setReports(response.data);\r\n        setIsLoadingProjects(false)\r\n        \r\n      });\r\n\r\n    axios\r\n      .post(\"http://localhost:3001/getdatabase/activeproject\", {data: \"\"}, { headers: {\r\n        accessToken: sessionStorage.getItem(\"accessToken\")\r\n      }})\r\n      .then((response) => {\r\n        setProject(response.data)\r\n        setIsLoadingReports(false)\r\n      })\r\n      \r\n    \r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    \r\n\r\n      <div className=\"home-page\">\r\n        <div className=\"project-container\">\r\n          \r\n          <h2>Mina projekt <Link to=\"/project\" className=\"link\">\r\n              <i class=\"fa-solid fa-plus\" ></i>\r\n            </Link></h2>\r\n          \r\n            <table className=\"table-container-home\">\r\n             { isLoadingProjects && <Spinner/>}\r\n              <thead className=\"table-head-home\">\r\n                <th>Project</th>\r\n                <th>Status</th>\r\n                <th>Datum</th>\r\n                <th className=\"right\">Total</th>\r\n                <th className=\"right\">Arbetad</th>\r\n                <th className=\"right\">Återstående</th>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  project.map((row) => {\r\n                    return (\r\n                      <tr className=\"project-line-home\">\r\n                        <td>{row.name}</td>\r\n                        <td>{row.status}</td>\r\n                        <td>{row.dateStart} - {row.dateEnd}</td>\r\n                        <td className=\"right\">{row.hours}</td>\r\n                        <td className=\"right\">{row.hoursWorked}</td>\r\n                        <td className=\"right\">{row.hoursLeft}</td>\r\n                      </tr>\r\n                    )\r\n                  })\r\n                }\r\n              </tbody>\r\n            </table>\r\n          \r\n          \r\n        </div>\r\n        \r\n        <div className='report-container'>\r\n\r\n          <h2 className=\"report-header\" >Mina tidsrapporter <i class=\"fa-solid fa-plus\" onClick={()=>changeContent2(popuptoggle2)}></i>\r\n          </h2>\r\n          <table className=\"table-container-home\">\r\n          { isLoadingReports && <div className=\"spinner-center\"> <Spinner/></div> } \r\n              <thead className=\"table-head-home\">\r\n              <th>Datum</th>\r\n                <th>Project</th>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  reports.map((row) => {\r\n                    return (\r\n                      <tr className=\"report-line\" onClick={()=>changeContent(row)}>\r\n                        <td>{row.date}</td>\r\n                        <td>{row.projectName}</td>\r\n                        \r\n                        \r\n                      </tr>\r\n                    )\r\n                  })\r\n                }\r\n              </tbody>\r\n            </table>\r\n        </div>\r\n        \r\n            {/* Pop-Up-Modalen för varje tidrapport */}\r\n        {popuptoggle &&\r\n        <div className=\"pop-up-container\" onClick={changeContent}>\r\n          <div className=\"pop-up-body\" onClick={(e)=>e.stopPropagation()}>\r\n              <div className=\"pop-up-header\">\r\n              <button className=\"modalbtn\" onClick={changeContent}> X </button>\r\n            </div>\r\n            <div className=\"pop-up-content\">\r\n              {popupcontent.map((pop)=>{\r\n                return (\r\n                  <div className=\"pop-up-card\">\r\n                    <p className=\"text-line\">Namn: {pop.personName}</p>\r\n                    <p className=\"text-line\">Projekt: {pop.projectName}</p>\r\n                    <p className=\"text-line\">Datum: {pop.date}</p>\r\n                    <p className=\"text-line\">Timmar: {pop.hours}</p>\r\n                    <p className=\"text-line\">Anteckning: {pop.note}</p>\r\n                    <p className=\"text-line\">Kommentar: {pop.comment}</p>\r\n                    <form className=\"pop-up-input\">\r\n                    <label>\r\n                      Lägg till kommentar:\r\n                      <input type=\"text\" name=\"name\" />\r\n                    </label>\r\n                  </form>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n      </div>\r\n              {/* Slut på Pop-Up-Modalen */}\r\n\r\n              {/* Pop-Up-Modalen för att skapa ny tidsrapport */}\r\n        {popuptoggle2 &&\r\n        <div className=\"pop-up-container\" onClick={changeContent2}>\r\n          <div className=\"pop-up-body\" onClick={(e)=>e.stopPropagation()}>\r\n              <div className=\"pop-up-header\">\r\n              <button className=\"modalbtn\" onClick={changeContent2}> X </button>\r\n            </div>\r\n            <div className=\"pop-up-content\">\r\n            <Formik\r\n          initialValues={{\r\n            \r\n            project: \"\",\r\n            date: \"\",\r\n            hours: \"\",\r\n            note:\"\",\r\n            comment:\"\"\r\n          }}\r\n          validationSchema={\r\n            Yup.object().shape({\r\n            project: Yup.string().required(),\r\n            date: Yup.date().required(),\r\n            hours:Yup.number().required(),\r\n            note: Yup.string().required(),\r\n            comment: Yup.string().required()\r\n          })}\r\n          onSubmit={(values, {setSubmitting, resetForm}) => {\r\n            axios\r\n              .post('http://localhost:3001/createtimereports', \r\n                values,\r\n                {\r\n                  headers: {\r\n                    accessToken: sessionStorage.getItem(\"accessToken\")\r\n                  }\r\n                }\r\n              )\r\n              \r\n              setTimeout(() => {\r\n                refreshPage()\r\n                resetForm();\r\n                changeContent2();\r\n                setSubmitting(false)\r\n              }, 2000)\r\n\r\n          }}\r\n          >\r\n          {props => (\r\n          <Form className=\"container\">\r\n            <h1>Skapa ny tidsrapport</h1>\r\n            <CustomSelect className=\"timeReportInput\" label=\"Projekt\" name=\"project\">\r\n              <option value=\"\">Välj projekt</option>  \r\n              {\r\n                project.map((pages) => {\r\n                  return (\r\n                    <>\r\n                      <option value={pages.id}>{pages.name}</option> \r\n                    </>\r\n                  )\r\n                  \r\n                })\r\n              }\r\n            </CustomSelect>   \r\n            <CustomTextInput className=\"timeReportInput\" label=\"Datum\" name=\"date\" type=\"date\"/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Timmar\" name=\"hours\" type=\"number\" placeholder='ex. 10...'/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Anteckning\" name=\"note\" type=\"text\" placeholder='ex. möte...'/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Kommentar\" name=\"comment\" type=\"text\" placeholder='ex. löste denna bugg..'/>\r\n            \r\n            \r\n\r\n            <button type='submit' className=\"btnPos\">{props.isSubmitting ? 'laddar...' : 'Skapa Tidsrapport'}</button>\r\n          </Form>\r\n          )}\r\n        </Formik>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n              {/* Slut på Pop-Up-Modalen */}\r\n              \r\n      <Footer/> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Button.js",[],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\CustomSelect.js",["129"],[],"import React from 'react'\r\nimport { Formik, useField } from \"formik\";\r\nfunction CustomSelect({label, ...props}) {\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n      <>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <select {...field}{...props} />\r\n        {meta.touch && meta.error ? (\r\n          <div className=\"error\">{meta.error}</div> ) : null}\r\n      </>\r\n    )\r\n}\r\n\r\nexport default CustomSelect","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\CustomTextInput.js",["130"],[],"import React from 'react'\r\nimport { Formik, useField} from 'formik'\r\n\r\nfunction CustomTextInput({label, ...props}) {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field}{...props} />\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomTextInput","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Project.js",["131","132","133","134"],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Footer.js",[],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Spinner.js",[],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Weeks.js",["135","136","137","138","139","140","141","142"],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Chart.js",["143","144"],[],"import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n} from \"chart.js\"\r\nimport {Bar, Line} from 'react-chartjs-2'\r\n\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n)\r\n\r\nexport const BarChart = ({labels, data}) => {\r\n    console.log(labels)\r\n    const [chartData, setChartData] = useState({\r\n        datasets: []\r\n    })  \r\n    const [chartOptions, setChartOptions] = useState({})\r\n    useEffect(() => {\r\n        setChartData({\r\n            labels: labels,\r\n            datasets: [\r\n                {\r\n                    label: \"Arbetade timmar\",\r\n                    data: data,\r\n                    borderColor: \"rgb(53, 162, 235)\",\r\n                    backgroundColor: \"rgba(53, 162, 235, 0.4)\"\r\n                }\r\n            ]\r\n        })\r\n        setChartOptions({\r\n            responsive: true,\r\n            plugins: {\r\n                Legend: {\r\n                    position: \"top\"\r\n                },\r\n                Title: {\r\n                    display: true,\r\n                    text: \"Hours worked\"\r\n                }\r\n            }\r\n        })\r\n      }, [])\r\n       \r\n    return (\r\n        <div>\r\n            <Bar options={chartOptions} data={chartData} />\r\n        </div>\r\n    )\r\n}",{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":3,"column":39,"nodeType":"151","messageId":"152","endLine":3,"endColumn":43},{"ruleId":"149","severity":1,"message":"153","line":9,"column":8,"nodeType":"151","messageId":"152","endLine":9,"endColumn":14},{"ruleId":"149","severity":1,"message":"154","line":20,"column":10,"nodeType":"151","messageId":"152","endLine":20,"endColumn":20},{"ruleId":"149","severity":1,"message":"155","line":20,"column":22,"nodeType":"151","messageId":"152","endLine":20,"endColumn":35},{"ruleId":"149","severity":1,"message":"156","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"157","line":3,"column":9,"nodeType":"151","messageId":"152","endLine":3,"endColumn":15},{"ruleId":"149","severity":1,"message":"158","line":3,"column":17,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"159","line":11,"column":8,"nodeType":"151","messageId":"152","endLine":11,"endColumn":20},{"ruleId":"149","severity":1,"message":"160","line":3,"column":24,"nodeType":"151","messageId":"152","endLine":3,"endColumn":29},{"ruleId":"149","severity":1,"message":"161","line":3,"column":31,"nodeType":"151","messageId":"152","endLine":3,"endColumn":43},{"ruleId":"149","severity":1,"message":"162","line":3,"column":45,"nodeType":"151","messageId":"152","endLine":3,"endColumn":53},{"ruleId":"149","severity":1,"message":"163","line":4,"column":9,"nodeType":"151","messageId":"152","endLine":4,"endColumn":15},{"ruleId":"149","severity":1,"message":"159","line":5,"column":8,"nodeType":"151","messageId":"152","endLine":5,"endColumn":20},{"ruleId":"149","severity":1,"message":"164","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":13},{"ruleId":"149","severity":1,"message":"157","line":8,"column":9,"nodeType":"151","messageId":"152","endLine":8,"endColumn":15},{"ruleId":"149","severity":1,"message":"158","line":8,"column":17,"nodeType":"151","messageId":"152","endLine":8,"endColumn":21},{"ruleId":"149","severity":1,"message":"165","line":12,"column":12,"nodeType":"151","messageId":"152","endLine":12,"endColumn":18},{"ruleId":"149","severity":1,"message":"166","line":12,"column":20,"nodeType":"151","messageId":"152","endLine":12,"endColumn":29},{"ruleId":"149","severity":1,"message":"167","line":13,"column":12,"nodeType":"151","messageId":"152","endLine":13,"endColumn":18},{"ruleId":"149","severity":1,"message":"168","line":13,"column":20,"nodeType":"151","messageId":"152","endLine":13,"endColumn":29},{"ruleId":"149","severity":1,"message":"169","line":15,"column":12,"nodeType":"151","messageId":"152","endLine":15,"endColumn":18},{"ruleId":"149","severity":1,"message":"160","line":3,"column":24,"nodeType":"151","messageId":"152","endLine":3,"endColumn":29},{"ruleId":"149","severity":1,"message":"161","line":3,"column":31,"nodeType":"151","messageId":"152","endLine":3,"endColumn":43},{"ruleId":"149","severity":1,"message":"170","line":10,"column":7,"nodeType":"151","messageId":"152","endLine":10,"endColumn":18},{"ruleId":"149","severity":1,"message":"171","line":25,"column":7,"nodeType":"151","messageId":"152","endLine":25,"endColumn":21},{"ruleId":"149","severity":1,"message":"167","line":56,"column":12,"nodeType":"151","messageId":"152","endLine":56,"endColumn":18},{"ruleId":"149","severity":1,"message":"168","line":56,"column":20,"nodeType":"151","messageId":"152","endLine":56,"endColumn":29},{"ruleId":"149","severity":1,"message":"172","line":57,"column":13,"nodeType":"151","messageId":"152","endLine":57,"endColumn":17},{"ruleId":"149","severity":1,"message":"173","line":57,"column":19,"nodeType":"151","messageId":"152","endLine":57,"endColumn":26},{"ruleId":"149","severity":1,"message":"174","line":1,"column":38,"nodeType":"151","messageId":"152","endLine":1,"endColumn":48},{"ruleId":"149","severity":1,"message":"175","line":2,"column":15,"nodeType":"151","messageId":"152","endLine":2,"endColumn":26},{"ruleId":"149","severity":1,"message":"176","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":22},{"ruleId":"149","severity":1,"message":"160","line":10,"column":24,"nodeType":"151","messageId":"152","endLine":10,"endColumn":29},{"ruleId":"149","severity":1,"message":"161","line":10,"column":31,"nodeType":"151","messageId":"152","endLine":10,"endColumn":43},{"ruleId":"149","severity":1,"message":"162","line":10,"column":45,"nodeType":"151","messageId":"152","endLine":10,"endColumn":53},{"ruleId":"149","severity":1,"message":"157","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":16},{"ruleId":"149","severity":1,"message":"157","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":16},{"ruleId":"149","severity":1,"message":"177","line":3,"column":24,"nodeType":"151","messageId":"152","endLine":3,"endColumn":39},{"ruleId":"149","severity":1,"message":"178","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":13},{"ruleId":"149","severity":1,"message":"179","line":21,"column":9,"nodeType":"151","messageId":"152","endLine":21,"endColumn":17},{"ruleId":"149","severity":1,"message":"180","line":37,"column":11,"nodeType":"151","messageId":"152","endLine":37,"endColumn":18},{"ruleId":"149","severity":1,"message":"181","line":12,"column":9,"nodeType":"151","messageId":"152","endLine":12,"endColumn":12},{"ruleId":"149","severity":1,"message":"182","line":12,"column":21,"nodeType":"151","messageId":"152","endLine":12,"endColumn":38},{"ruleId":"149","severity":1,"message":"183","line":12,"column":40,"nodeType":"151","messageId":"152","endLine":12,"endColumn":44},{"ruleId":"149","severity":1,"message":"184","line":16,"column":10,"nodeType":"151","messageId":"152","endLine":16,"endColumn":18},{"ruleId":"149","severity":1,"message":"185","line":30,"column":7,"nodeType":"151","messageId":"152","endLine":30,"endColumn":14},{"ruleId":"149","severity":1,"message":"186","line":68,"column":12,"nodeType":"151","messageId":"152","endLine":68,"endColumn":24},{"ruleId":"149","severity":1,"message":"187","line":70,"column":12,"nodeType":"151","messageId":"152","endLine":70,"endColumn":21},{"ruleId":"149","severity":1,"message":"188","line":70,"column":23,"nodeType":"151","messageId":"152","endLine":70,"endColumn":35},{"ruleId":"149","severity":1,"message":"183","line":11,"column":14,"nodeType":"151","messageId":"152","endLine":11,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":53,"column":10,"nodeType":"191","endLine":53,"endColumn":12,"suggestions":"192"},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'setIsLoggedIn' is assigned a value but never used.","'useEffect' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'CustomSelect' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'useField' is defined but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'person' is assigned a value but never used.","'setPerson' is assigned a value but never used.","'button' is assigned a value but never used.","'database_id' is assigned a value but never used.","'CustomCheckbox' is assigned a value but never used.","'name' is assigned a value but never used.","'loginId' is assigned a value but never used.","'useContext' is defined but never used.","'useNavigate' is defined but never used.","'LoginContext' is defined but never used.","'yupToFormErrors' is defined but never used.","'Table' is defined but never used.","'navigate' is assigned a value but never used.","'results' is assigned a value but never used.","'Bar' is defined but never used.","'getElementAtEvent' is defined but never used.","'Line' is defined but never used.","'BarChart' is defined but never used.","'getData' is assigned a value but never used.","'chartOptions' is assigned a value but never used.","'fullChart' is assigned a value but never used.","'setFullChart' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'labels'. Either include them or remove the dependency array. If 'setChartData' needs the current value of 'labels', you can also switch to useReducer instead of useState and read 'labels' in the reducer.","ArrayExpression",["195"],"no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},"Update the dependencies array to be: [data, labels]",{"range":"198","text":"199"},[1263,1265],"[data, labels]"]
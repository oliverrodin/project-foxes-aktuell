[{"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\index.js":"1","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\App.js":"2","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Login.js":"3","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Registration.js":"4","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Context\\LoginContext.js":"5","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Navbar.js":"6","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\CreateReport.js":"7","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Home.js":"8","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Button.js":"9","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\CustomSelect.js":"10","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\CustomTextInput.js":"11","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Project.js":"12","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Footer.js":"13","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Spinner.js":"14","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Weeks.js":"15","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Chart.js":"16"},{"size":157,"mtime":1646834548799,"results":"17","hashOfConfig":"18"},{"size":1525,"mtime":1648198874147,"results":"19","hashOfConfig":"18"},{"size":1974,"mtime":1648032429213,"results":"20","hashOfConfig":"18"},{"size":2266,"mtime":1648032439803,"results":"21","hashOfConfig":"18"},{"size":88,"mtime":1647441849834,"results":"22","hashOfConfig":"18"},{"size":2431,"mtime":1648040097568,"results":"23","hashOfConfig":"18"},{"size":4385,"mtime":1648105651029,"results":"24","hashOfConfig":"18"},{"size":8665,"mtime":1648123622176,"results":"25","hashOfConfig":"18"},{"size":794,"mtime":1647265704228,"results":"26","hashOfConfig":"18"},{"size":442,"mtime":1647252256041,"results":"27","hashOfConfig":"18"},{"size":452,"mtime":1647441849833,"results":"28","hashOfConfig":"18"},{"size":8994,"mtime":1648123622177,"results":"29","hashOfConfig":"18"},{"size":710,"mtime":1648123622176,"results":"30","hashOfConfig":"18"},{"size":106,"mtime":1648123622175,"results":"31","hashOfConfig":"18"},{"size":1751,"mtime":1648202466705,"results":"32","hashOfConfig":"18"},{"size":147,"mtime":1648202326052,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"w3ig0z",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"37"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"37"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\index.js",[],[],["91","92"],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\App.js",["93","94","95","96"],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Login.js",["97","98","99","100"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {Formik, Form} from 'formik'\r\nimport axios from 'axios'\r\nimport \"./Login.css\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\n//PAge\r\nimport CustomSelect from '../Components/CustomSelect'\r\n\r\n\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    let navigate = useNavigate();\r\n    \r\n  const login = () => {\r\n    const data = {username: username, password: password}\r\n      axios.post(\"http://localhost:3001/auth/login\", data,\r\n      {headers: { accessToken: sessionStorage.getItem(\"accessToken\") }}).then(\r\n          (response) => {\r\n            console.log(response.data)\r\n              if (response.data.error) {\r\n                 alert(response.data.error)\r\n              } else {\r\n                sessionStorage.setItem(\"accessToken\", response.data );\r\n                navigate(\"/home\");  \r\n              }\r\n              \r\n          }\r\n      )\r\n        \r\n  }\r\n  return (\r\n      \r\n    <div className='login-page'>\r\n        <div className=\"login-div\">\r\n        <div className=\"logo\"></div>\r\n        \r\n        <div className=\"title\">Foxes Timereports</div>\r\n        <div className=\"sub-title\">2022</div>\r\n        <div className=\"fields\">\r\n            <div className=\"username\"><input \r\n          type=\"text\" placeholder=\"Username\"\r\n          onChange={(event) => {\r\n              setUsername(event.target.value)\r\n          }} \r\n        /></div>\r\n            <div className=\"password\"><input \r\n          type=\"password\" placeholder=\"Password\"\r\n          onChange={(event) => {\r\n              setPassword(event.target.value)\r\n          }}  /></div>\r\n        </div>\r\n        <button className=\"signin-button\" onClick={login}>Login</button>\r\n        <div className=\"link\">\r\n        <Link to=\"/registration\">Sign up</Link>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Registration.js",["101","102","103"],[],"import React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport './Registration.css';\r\nimport {Link} from 'react-router-dom'\r\n\r\n//Pages\r\nimport CustomTextInput from '../Components/CustomTextInput'\r\nimport axios from 'axios';\r\n\r\nfunction Registration() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n    <div className='registration-div'>\r\n    <div className=\"logo\"></div>\r\n        \r\n        <div className=\"title\">Foxes Timereports</div>\r\n        <div className=\"sub-title-reg\">2022</div>\r\n        <div className=\"fields-reg\">\r\n      <Formik\r\n      initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          \r\n\r\n\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n          username: Yup.string().min(3).max(15).required(),\r\n          password: Yup.string().min(4).max(20).required(),\r\n          email: Yup.string().required(),\r\n          name: Yup.string().required()\r\n\r\n      })}\r\n      onSubmit={ (values, {setSubmitting, resetForm}) => {\r\n        axios.post('http://localhost:3001/auth', values)\r\n             .then((res) => {\r\n               console.log(res)\r\n             })\r\n        \r\n        \r\n        resetForm();\r\n        setSubmitting(false)\r\n        navigate('/')     \r\n      }}\r\n        >\r\n          \r\n          {props => (\r\n            <Form>\r\n              <CustomTextInput className=\"username-reg\" placeholder=\"Name\" input type=\"text\" name=\"name\"  />\r\n              <CustomTextInput className=\"username-reg\" placeholder=\"Email \" name=\"email\" type=\"email\" />\r\n              <CustomTextInput className=\"username-reg\" placeholder=\"Username \" name=\"username\" type=\"text\" />\r\n              <CustomTextInput className=\"username-reg\" placeholder=\"Password\" name=\"password\" type=\"password\" /> \r\n              <button type='submit' className=\"registration-button\">{props.isSubmitting ? 'loading...' : 'Register'}</button>\r\n              <div className=\"link\">\r\n        <Link to=\"/\">Back to Login</Link>\r\n        </div>\r\n            </Form>\r\n\r\n          )}  \r\n          \r\n      </Formik>\r\n      </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Registration","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Context\\LoginContext.js",[],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Navbar.js",["104","105","106","107","108","109","110","111","112","113"],[],"import React,{useState, useEffect, useContext} from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport './Navbar.css'\r\nimport {Button} from '../Components/Button.js'\r\nimport CustomSelect from \"../Components/CustomSelect\";\r\nimport { LoginContext } from '../Context/LoginContext'\r\nimport axios from \"axios\";\r\nimport {Formik, Form} from \"formik\";\r\n\r\n\r\nfunction App() {\r\n    const [filter, setFilter] = useState(\"\");  \r\n    const [person, setPerson] = useState([]);\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n    const { name } = useContext(LoginContext);\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n\r\n        if(window.innerWidth <= 960) {\r\n            setButton(false);\r\n        }\r\n\r\n        else {\r\n            setButton(true)\r\n        }\r\n\r\n    };\r\n    useEffect(() => {\r\n        \r\n        showButton();\r\n\r\n    }, []);\r\n    window.addEventListener('resize', showButton);\r\n\r\n    const logout = () => {\r\n        sessionStorage.clear()\r\n    }\r\n    \r\n\r\n  return (    \r\n    <nav className='navbar'>\r\n        <div className='navbar-container'>\r\n            <Link to=\"/home\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n                Foxes <i className='fa-solid fa-code'/> \r\n            </Link>\r\n            <div className='menu-icon' onClick={handleClick}>\r\n                <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n            </div>\r\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                {/* <li className='nav-item'>\r\n                    <Link to='/home' className='nav-links' onClick={closeMobileMenu}>\r\n                        Startsida\r\n                    </Link>\r\n                </li> */}\r\n                {/* <li className='nav-item'>\r\n                    <Link to='/createreport' className='nav-links' onClick={closeMobileMenu}>\r\n                        Skapa tidsrapport\r\n                    </Link>\r\n                </li> */}\r\n                <li className='user nav-links'>{name}</li>\r\n                <li className='nav-item'>\r\n                    <Link to='/' className='nav-links' onClick={logout}>\r\n                        Logga ut\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            \r\n           \r\n            \r\n        </div>\r\n    </nav>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\CreateReport.js",["114","115","116","117","118","119","120","121"],[],"import {React, useContext, useEffect, useState}from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport axios from \"axios\";\r\nimport { LoginContext } from \"../Context/LoginContext\";\r\nimport './CreateReport.css'\r\nimport Navbar from './Navbar'\r\n\r\nconst database_id = '58d96ae9275547a7960f5cca7c93e836'\r\n\r\nconst CustomTextInput = ({label, ...props}) => {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field}{...props} />\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nconst CustomCheckbox = ({children, ...props}) => {\r\n  const [field, meta] = useField(props, 'checkbox')\r\n\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input type=\"checkbox\" {...field}{...props} />\r\n        {children}\r\n      </label>\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nconst CustomSelect = ({label, ...props}) => {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <select {...field}{...props} />\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction CreateReport() {\r\n    const [project, setProject] = useState([])\r\n    const [person, setPerson] = useState([])\r\n    const { name, loginId } = useContext(LoginContext)\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(()  => {\r\n     axios.post(\"http://localhost:3001/getdatabase/project\", {data: \"\"}, { headers: {\r\n      accessToken: sessionStorage.getItem(\"accessToken\")\r\n    }}).then((response) => {\r\n        setProject(response.data)\r\n        \r\n      }) \r\n\r\n    }, [])\r\n\r\n    console.log(project)\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n      \r\n        <Formik\r\n          initialValues={{\r\n            \r\n            project: \"\",\r\n            date: \"\",\r\n            hours: \"\",\r\n            note:\"\",\r\n            comment:\"\"\r\n          }}\r\n          validationSchema={\r\n            Yup.object().shape({\r\n            project: Yup.string().required(),\r\n            date: Yup.date().required(),\r\n            hours:Yup.number().required(),\r\n            note: Yup.string().required(),\r\n            comment: Yup.string().required()\r\n          })}\r\n          onSubmit={(values, {setSubmitting, resetForm}) => {\r\n            axios\r\n              .post('http://localhost:3001/createtimereports', \r\n                values,\r\n                {\r\n                  headers: {\r\n                    accessToken: sessionStorage.getItem(\"accessToken\")\r\n                  }\r\n                }\r\n              )\r\n              \r\n              setTimeout(() => {\r\n                navigate(\"/home\")\r\n                resetForm();\r\n                setSubmitting(false)\r\n              }, 2000)\r\n\r\n          }}\r\n          >\r\n          {props => (\r\n          <Form className=\"container\">\r\n            <h1>Create time report</h1>\r\n            <CustomSelect className=\"timeReportInput\" label=\"Project\" name=\"project\">\r\n              <option value=\"\">Select Project</option>  \r\n              {\r\n                project.map((pages) => {\r\n                  return (\r\n                    <>\r\n                      <option value={pages.id}>{pages.name}</option> \r\n                    </>\r\n                  )\r\n                  \r\n                })\r\n              }\r\n            </CustomSelect>   \r\n            <CustomTextInput className=\"timeReportInput\" label=\"Date\" name=\"date\" type=\"date\"/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Hours\" name=\"hours\" type=\"number\" placeholder='ex. 10...'/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Note\" name=\"note\" type=\"text\" placeholder='ex. meeting...'/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Comment\" name=\"comment\" type=\"text\" placeholder='ex. fixed this bug...'/>\r\n            \r\n            \r\n\r\n            <button type='submit' className=\"btnPos\">{props.isSubmitting ? 'loading...' : 'Submit'}</button>\r\n          </Form>\r\n          )}\r\n        </Formik>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default CreateReport;\r\n","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Home.js",["122","123","124","125","126","127"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport \"./Report.css\";\r\nimport { LoginContext } from '../Context/LoginContext'\r\nimport \"./Modal.css\"; \r\nimport CustomSelect from \"../Components/CustomSelect\";\r\nimport CustomTextInput from \"../Components/CustomTextInput\"\r\nimport Navbar from './Navbar'\r\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport Footer from \"./Footer\";\r\nimport Spinner from \"../Components/Spinner\";\r\n\r\nfunction Home() {\r\n  const [reports, setReports] = useState([]);\r\n  const [project, setProject] = useState([]);\r\n  const [popupcontent, setpopupcontent] = useState([]);\r\n  const [popuptoggle, setpopuptoggle] = useState(false);\r\n  const [popuptoggle2, setpopuptoggle2] = useState(false);\r\n  const [isLoadingReports, setIsLoadingReports] = useState(true);\r\n  const [isLoadingProjects, setIsLoadingProjects] = useState(true);\r\n  \r\n  const changeContent=(value)=>{\r\n    setpopupcontent([value]);\r\n    setpopuptoggle(!popuptoggle);\r\n  };\r\n\r\n\r\n  const changeContent2=()=>{\r\n    setpopuptoggle2(!popuptoggle2)\r\n  }\r\n\r\n  function refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n  \r\n  \r\n  useEffect(() => {\r\n    axios\r\n      .post(\"http://localhost:3001/getdatabase/report\", {data: \"\"}, { headers: {accessToken: sessionStorage.getItem(\"accessToken\")} } )\r\n      .then((response) => {\r\n        setReports(response.data);\r\n        setIsLoadingProjects(false)\r\n        \r\n      });\r\n\r\n    axios\r\n      .post(\"http://localhost:3001/getdatabase/activeproject\", {data: \"\"}, { headers: {\r\n        accessToken: sessionStorage.getItem(\"accessToken\")\r\n      }})\r\n      .then((response) => {\r\n        setProject(response.data)\r\n        setIsLoadingReports(false)\r\n      })\r\n      \r\n    \r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    \r\n\r\n      <div className=\"home-page\">\r\n        <div className=\"project-container\">\r\n          \r\n          <h2>Mina projekt <Link to=\"/project\" className=\"link\">\r\n              <i class=\"fa-solid fa-plus\" ></i>\r\n            </Link></h2>\r\n          \r\n            <table className=\"table-container-home\">\r\n             { isLoadingProjects && <Spinner/>}\r\n              <thead className=\"table-head-home\">\r\n                <th>Project</th>\r\n                <th>Status</th>\r\n                <th>Datum</th>\r\n                <th className=\"right\">Total</th>\r\n                <th className=\"right\">Arbetad</th>\r\n                <th className=\"right\">Återstående</th>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  project.map((row) => {\r\n                    return (\r\n                      <tr className=\"project-line-home\">\r\n                        <td>{row.name}</td>\r\n                        <td>{row.status}</td>\r\n                        <td>{row.dateStart} - {row.dateEnd}</td>\r\n                        <td className=\"right\">{row.hours}</td>\r\n                        <td className=\"right\">{row.hoursWorked}</td>\r\n                        <td className=\"right\">{row.hoursLeft}</td>\r\n                      </tr>\r\n                    )\r\n                  })\r\n                }\r\n              </tbody>\r\n            </table>\r\n          \r\n          \r\n        </div>\r\n        \r\n        <div className='report-container'>\r\n\r\n          <h2 className=\"report-header\" >Mina tidsrapporter <i class=\"fa-solid fa-plus\" onClick={()=>changeContent2(popuptoggle2)}></i>\r\n          </h2>\r\n          <table className=\"table-container-home\">\r\n          { isLoadingReports && <div className=\"spinner-center\"> <Spinner/></div> } \r\n              <thead className=\"table-head-home\">\r\n              <th>Datum</th>\r\n                <th>Project</th>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  reports.map((row) => {\r\n                    return (\r\n                      <tr className=\"report-line\" onClick={()=>changeContent(row)}>\r\n                        <td>{row.date}</td>\r\n                        <td>{row.projectName}</td>\r\n                        \r\n                        \r\n                      </tr>\r\n                    )\r\n                  })\r\n                }\r\n              </tbody>\r\n            </table>\r\n        </div>\r\n        \r\n            {/* Pop-Up-Modalen för varje tidrapport */}\r\n        {popuptoggle &&\r\n        <div className=\"pop-up-container\" onClick={changeContent}>\r\n          <div className=\"pop-up-body\" onClick={(e)=>e.stopPropagation()}>\r\n              <div className=\"pop-up-header\">\r\n              <button className=\"modalbtn\" onClick={changeContent}> X </button>\r\n            </div>\r\n            <div className=\"pop-up-content\">\r\n              {popupcontent.map((pop)=>{\r\n                return (\r\n                  <div className=\"pop-up-card\">\r\n                    <p className=\"text-line\">Namn: {pop.personName}</p>\r\n                    <p className=\"text-line\">Projekt: {pop.projectName}</p>\r\n                    <p className=\"text-line\">Datum: {pop.date}</p>\r\n                    <p className=\"text-line\">Timmar: {pop.hours}</p>\r\n                    <p className=\"text-line\">Anteckning: {pop.note}</p>\r\n                    <p className=\"text-line\">Kommentar: {pop.comment}</p>\r\n                    <form className=\"pop-up-input\">\r\n                    <label>\r\n                      Lägg till kommentar:\r\n                      <input type=\"text\" name=\"name\" />\r\n                    </label>\r\n                  </form>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n      </div>\r\n              {/* Slut på Pop-Up-Modalen */}\r\n\r\n              {/* Pop-Up-Modalen för att skapa ny tidsrapport */}\r\n        {popuptoggle2 &&\r\n        <div className=\"pop-up-container\" onClick={changeContent2}>\r\n          <div className=\"pop-up-body\" onClick={(e)=>e.stopPropagation()}>\r\n              <div className=\"pop-up-header\">\r\n              <button className=\"modalbtn\" onClick={changeContent2}> X </button>\r\n            </div>\r\n            <div className=\"pop-up-content\">\r\n            <Formik\r\n          initialValues={{\r\n            \r\n            project: \"\",\r\n            date: \"\",\r\n            hours: \"\",\r\n            note:\"\",\r\n            comment:\"\"\r\n          }}\r\n          validationSchema={\r\n            Yup.object().shape({\r\n            project: Yup.string().required(),\r\n            date: Yup.date().required(),\r\n            hours:Yup.number().required(),\r\n            note: Yup.string().required(),\r\n            comment: Yup.string().required()\r\n          })}\r\n          onSubmit={(values, {setSubmitting, resetForm}) => {\r\n            axios\r\n              .post('http://localhost:3001/createtimereports', \r\n                values,\r\n                {\r\n                  headers: {\r\n                    accessToken: sessionStorage.getItem(\"accessToken\")\r\n                  }\r\n                }\r\n              )\r\n              \r\n              setTimeout(() => {\r\n                refreshPage()\r\n                resetForm();\r\n                changeContent2();\r\n                setSubmitting(false)\r\n              }, 2000)\r\n\r\n          }}\r\n          >\r\n          {props => (\r\n          <Form className=\"container\">\r\n            <h1>Skapa ny tidsrapport</h1>\r\n            <CustomSelect className=\"timeReportInput\" label=\"Projekt\" name=\"project\">\r\n              <option value=\"\">Välj projekt</option>  \r\n              {\r\n                project.map((pages) => {\r\n                  return (\r\n                    <>\r\n                      <option value={pages.id}>{pages.name}</option> \r\n                    </>\r\n                  )\r\n                  \r\n                })\r\n              }\r\n            </CustomSelect>   \r\n            <CustomTextInput className=\"timeReportInput\" label=\"Datum\" name=\"date\" type=\"date\"/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Timmar\" name=\"hours\" type=\"number\" placeholder='ex. 10...'/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Anteckning\" name=\"note\" type=\"text\" placeholder='ex. möte...'/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Kommentar\" name=\"comment\" type=\"text\" placeholder='ex. löste denna bugg..'/>\r\n            \r\n            \r\n\r\n            <button type='submit' className=\"btnPos\">{props.isSubmitting ? 'laddar...' : 'Skapa Tidsrapport'}</button>\r\n          </Form>\r\n          )}\r\n        </Formik>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n              {/* Slut på Pop-Up-Modalen */}\r\n              \r\n      <Footer/> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Button.js",[],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\CustomSelect.js",["128"],[],"import React from 'react'\r\nimport { Formik, useField } from \"formik\";\r\nfunction CustomSelect({label, ...props}) {\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n      <>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <select {...field}{...props} />\r\n        {meta.touch && meta.error ? (\r\n          <div className=\"error\">{meta.error}</div> ) : null}\r\n      </>\r\n    )\r\n}\r\n\r\nexport default CustomSelect","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\CustomTextInput.js",["129"],[],"import React from 'react'\r\nimport { Formik, useField} from 'formik'\r\n\r\nfunction CustomTextInput({label, ...props}) {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field}{...props} />\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomTextInput","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Project.js",["130","131","132","133"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Formik, Form, yupToFormErrors } from \"formik\";\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport \"./Project.css\";\r\nimport \"./Footer.css\"\r\n\r\n\r\nimport CustomTextInput from \"../Components/CustomTextInput\";\r\nimport CustomSelect from \"../Components/CustomSelect\";\r\n\r\nimport Navbar from \"./Navbar\";\r\nimport Footer from \"./Footer\";\r\nimport Spinner from \"../Components/Spinner\";\r\n\r\nfunction Project() {\r\n  const navigate = useNavigate();\r\n  const [person, setPerson] = useState([]);\r\n  const [project, setProject] = useState([]);\r\n  const [filtProject, setFiltProject] = useState([]);\r\n  const [dateFrom, setDateFrom] = useState(\"\");\r\n  const [dateTo, setDateTo] = useState(\"\");\r\n  const [isPressed, setIsPressed] = useState(false);\r\n  const [projectName, setProjectName] = useState(\"\")\r\n  const [isLoading, setIsLoading] = useState(false)\r\n \r\n  \r\n\r\n  \r\n  let sumHours = 0;\r\n\r\n  const summing = () => {\r\n    const results = filtProject.map((row) => {\r\n      return (sumHours += row.hours);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"http://localhost:3001/project/getprojects\",\r\n        { data: \"\" },\r\n        {\r\n          headers: {\r\n            accessToken:\r\n              sessionStorage.getItem(\"accessToken\"),\r\n          },\r\n        },\r\n      )\r\n      .then((response) => {\r\n        setProject(response.data);\r\n      });\r\n    axios\r\n      .post(\r\n        \"http://localhost:3001/project/people\",\r\n        { data: \"\" },\r\n        {\r\n          headers: {\r\n            accessToken:\r\n              sessionStorage.getItem(\"accessToken\"),\r\n          },\r\n        },\r\n      )\r\n      .then((response) => {\r\n        setPerson(response.data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className='project-page'>\r\n        <Formik\r\n          initialValues={{\r\n            person: \"\",\r\n            project: \"\",\r\n            dateFrom: \"\",\r\n            dateTo: \"\",\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            person: Yup.string().required(),\r\n            project: Yup.string().required(),\r\n            dateFrom: Yup.string().required(),\r\n            dateTo: Yup.string().required(),\r\n          })}\r\n          onSubmit={(\r\n            values,\r\n            { setSubmitting, resetForm, },\r\n            \r\n          ) => {\r\n            if (\r\n              values.person ===\r\n                \"b0c48f83-d4ee-4006-85fb-fa3f505dc9ff\" &&\r\n              values.project === \"Alla projekt\"\r\n            ) {\r\n              \r\n              axios\r\n                .post(\r\n                  \"http://localhost:3001/project/justdate\",\r\n                  values,\r\n                  {\r\n                    headers: {\r\n                      accessToken:\r\n                        sessionStorage.getItem(\r\n                          \"accessToken\",\r\n                        ),\r\n                    },\r\n                  },\r\n                )\r\n                .then((res) => {\r\n                  \r\n                  setFiltProject(res.data);\r\n                  console.log(values.dateFrom);\r\n                });\r\n                setProjectName(values.project)\r\n            } else if (values.person !== \"b0c48f83-d4ee-4006-85fb-fa3f505dc9ff\" &&\r\n            values.project !== \"Alla projekt\") {\r\n              axios\r\n                .post(\r\n                  \"http://localhost:3001/project/unique\",\r\n                  values,\r\n                  {\r\n                    headers: {\r\n                      accessToken:\r\n                        sessionStorage.getItem(\r\n                          \"accessToken\",\r\n                        ),\r\n                    },\r\n                  },\r\n                )\r\n                .then((res) => {\r\n                  setFiltProject(res.data);\r\n                  console.log(values.dateFrom);\r\n                  \r\n                });\r\n                setProjectName(values.project)\r\n            }else {\r\n              axios\r\n                .post(\r\n                  \"http://localhost:3001/project\",\r\n                  values,\r\n                  {\r\n                    headers: {\r\n                      accessToken:\r\n                        sessionStorage.getItem(\r\n                          \"accessToken\",\r\n                        ),\r\n                    },\r\n                  },\r\n                )\r\n                .then((res) => {\r\n                  setFiltProject(res.data);\r\n                  console.log(values.dateFrom);\r\n                });\r\n                setProjectName(values.project)\r\n            }\r\n            console.log(projectName)\r\n            setDateFrom(values.dateFrom);\r\n            setDateTo(values.dateTo);\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n              resetForm();\r\n              setIsLoading(false);\r\n              setSubmitting(false);\r\n              setIsPressed(true);\r\n            }, 500);\r\n\r\n            console.log(values);\r\n          }}>\r\n          {(props) => (\r\n            <>\r\n              <h3 className=\"project-header\">\r\n                {isPressed\r\n                  ? \" \"\r\n                  : \"Välj projekt och tidspan för att se mer information\"}\r\n              </h3>\r\n              <Form className='admin-container'>\r\n                <CustomSelect\r\n                  className='admin-form'\r\n                  label='Medarbetare:'\r\n                  name='person'>\r\n                  <option value=''>Välj medarbetare</option>\r\n                  <option value='b0c48f83-d4ee-4006-85fb-fa3f505dc9ff'>\r\n                    Alla medarbetare\r\n                  </option>         \r\n                          \r\n                  {person.map((pages) => {\r\n                    return (\r\n                      <>\r\n                        <option value={pages.id}>\r\n                          {pages.name}\r\n                        </option>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </CustomSelect>\r\n\r\n                <CustomSelect\r\n                  className='admin-form'\r\n                  label='Projekt:'\r\n                  name='project'>\r\n                  <option value=''>Välj projekt</option>\r\n                  <option value='Alla projekt'>\r\n                    Alla projekt\r\n                  </option>                  \r\n                  {project.map((pages) => {\r\n                    return (\r\n                      <>\r\n                        <option value={pages.name}>\r\n                          {pages.name}\r\n                        </option>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </CustomSelect>\r\n                <CustomTextInput\r\n                  className='admin-form'\r\n                  label='Från:'\r\n                  name='dateFrom'\r\n                  type='date'\r\n                />\r\n                <CustomTextInput\r\n                  className='admin-form'\r\n                  label='Till:'\r\n                  name='dateTo'\r\n                  type='date'\r\n                />\r\n\r\n                <button\r\n                  type='submit'\r\n                  className='admin-button'>\r\n                  {props.isSubmitting\r\n                    ? \"Laddar...\"\r\n                    : \"Visa rapporter\"}\r\n                </button>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n\r\n        <div className='table-container-report'>\r\n        { isLoading && <div> <Spinner/></div> } \r\n          <h2 className=\"project-name\">\r\n            {isPressed\r\n              ? projectName\r\n              : \" \"}\r\n          </h2>\r\n          <h3 className=\"project-date\">\r\n            {isPressed\r\n              ? \"Vald period: \" + dateFrom + \" - \"\r\n              : \" \"}{\" \"}\r\n            {isPressed ? dateTo : \" \"}\r\n          </h3>\r\n          \r\n          <table className=\"table\">\r\n            {isPressed ? <th className=\"table-head\"> Datum:  </th> : \" \" }\r\n            {isPressed ? <th className=\"table-head\"> Projekt:  </th> : \" \" }\r\n            {isPressed ? <th className=\"table-head\"> Medarbetare:  </th> : \" \" }\r\n            {isPressed ? <th className=\"table-head\"> Timmar:  </th> : \" \" }\r\n          {filtProject.map((row) => {\r\n            return (\r\n              \r\n              <tr className=\"project-line\">\r\n                <td className=\"td\">{row.date}</td>\r\n                <td className=\"td\">{row.projectName}</td>\r\n                <td className=\"td\">{row.personName}</td>\r\n                <td className=\"td\">{row.hours}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n          {isPressed ? <tr className=\"project-total-line\">\r\n            <td className=\"td\">Totalt: </td>\r\n            <td></td>\r\n            <td></td>\r\n            <td className=\"td\">{summing()}{sumHours}</td>\r\n          </tr> : \" \"}\r\n          </table>\r\n        </div> \r\n        \r\n      </div>\r\n     <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Footer.js",[],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Spinner.js",[],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Pages\\Weeks.js",["134","135"],[],"C:\\REACT\\project-foxes-aktuell\\frontend\\src\\Components\\Chart.js",["136"],[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":3,"column":39,"nodeType":"143","messageId":"144","endLine":3,"endColumn":43},{"ruleId":"141","severity":1,"message":"145","line":9,"column":8,"nodeType":"143","messageId":"144","endLine":9,"endColumn":14},{"ruleId":"141","severity":1,"message":"146","line":20,"column":10,"nodeType":"143","messageId":"144","endLine":20,"endColumn":20},{"ruleId":"141","severity":1,"message":"147","line":20,"column":22,"nodeType":"143","messageId":"144","endLine":20,"endColumn":35},{"ruleId":"141","severity":1,"message":"148","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"149","line":3,"column":9,"nodeType":"143","messageId":"144","endLine":3,"endColumn":15},{"ruleId":"141","severity":1,"message":"150","line":3,"column":17,"nodeType":"143","messageId":"144","endLine":3,"endColumn":21},{"ruleId":"141","severity":1,"message":"151","line":11,"column":8,"nodeType":"143","messageId":"144","endLine":11,"endColumn":20},{"ruleId":"141","severity":1,"message":"152","line":3,"column":24,"nodeType":"143","messageId":"144","endLine":3,"endColumn":29},{"ruleId":"141","severity":1,"message":"153","line":3,"column":31,"nodeType":"143","messageId":"144","endLine":3,"endColumn":43},{"ruleId":"141","severity":1,"message":"154","line":3,"column":45,"nodeType":"143","messageId":"144","endLine":3,"endColumn":53},{"ruleId":"141","severity":1,"message":"155","line":4,"column":9,"nodeType":"143","messageId":"144","endLine":4,"endColumn":15},{"ruleId":"141","severity":1,"message":"151","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":20},{"ruleId":"141","severity":1,"message":"156","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":13},{"ruleId":"141","severity":1,"message":"149","line":8,"column":9,"nodeType":"143","messageId":"144","endLine":8,"endColumn":15},{"ruleId":"141","severity":1,"message":"150","line":8,"column":17,"nodeType":"143","messageId":"144","endLine":8,"endColumn":21},{"ruleId":"141","severity":1,"message":"157","line":12,"column":12,"nodeType":"143","messageId":"144","endLine":12,"endColumn":18},{"ruleId":"141","severity":1,"message":"158","line":12,"column":20,"nodeType":"143","messageId":"144","endLine":12,"endColumn":29},{"ruleId":"141","severity":1,"message":"159","line":13,"column":12,"nodeType":"143","messageId":"144","endLine":13,"endColumn":18},{"ruleId":"141","severity":1,"message":"160","line":13,"column":20,"nodeType":"143","messageId":"144","endLine":13,"endColumn":29},{"ruleId":"141","severity":1,"message":"161","line":15,"column":12,"nodeType":"143","messageId":"144","endLine":15,"endColumn":18},{"ruleId":"141","severity":1,"message":"152","line":3,"column":24,"nodeType":"143","messageId":"144","endLine":3,"endColumn":29},{"ruleId":"141","severity":1,"message":"153","line":3,"column":31,"nodeType":"143","messageId":"144","endLine":3,"endColumn":43},{"ruleId":"141","severity":1,"message":"162","line":10,"column":7,"nodeType":"143","messageId":"144","endLine":10,"endColumn":18},{"ruleId":"141","severity":1,"message":"163","line":25,"column":7,"nodeType":"143","messageId":"144","endLine":25,"endColumn":21},{"ruleId":"141","severity":1,"message":"159","line":56,"column":12,"nodeType":"143","messageId":"144","endLine":56,"endColumn":18},{"ruleId":"141","severity":1,"message":"160","line":56,"column":20,"nodeType":"143","messageId":"144","endLine":56,"endColumn":29},{"ruleId":"141","severity":1,"message":"164","line":57,"column":13,"nodeType":"143","messageId":"144","endLine":57,"endColumn":17},{"ruleId":"141","severity":1,"message":"165","line":57,"column":19,"nodeType":"143","messageId":"144","endLine":57,"endColumn":26},{"ruleId":"141","severity":1,"message":"166","line":1,"column":38,"nodeType":"143","messageId":"144","endLine":1,"endColumn":48},{"ruleId":"141","severity":1,"message":"167","line":2,"column":15,"nodeType":"143","messageId":"144","endLine":2,"endColumn":26},{"ruleId":"141","severity":1,"message":"168","line":5,"column":10,"nodeType":"143","messageId":"144","endLine":5,"endColumn":22},{"ruleId":"141","severity":1,"message":"152","line":10,"column":24,"nodeType":"143","messageId":"144","endLine":10,"endColumn":29},{"ruleId":"141","severity":1,"message":"153","line":10,"column":31,"nodeType":"143","messageId":"144","endLine":10,"endColumn":43},{"ruleId":"141","severity":1,"message":"154","line":10,"column":45,"nodeType":"143","messageId":"144","endLine":10,"endColumn":53},{"ruleId":"141","severity":1,"message":"149","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":16},{"ruleId":"141","severity":1,"message":"149","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":16},{"ruleId":"141","severity":1,"message":"169","line":3,"column":24,"nodeType":"143","messageId":"144","endLine":3,"endColumn":39},{"ruleId":"141","severity":1,"message":"170","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":13},{"ruleId":"141","severity":1,"message":"171","line":20,"column":9,"nodeType":"143","messageId":"144","endLine":20,"endColumn":17},{"ruleId":"141","severity":1,"message":"172","line":36,"column":11,"nodeType":"143","messageId":"144","endLine":36,"endColumn":18},{"ruleId":"141","severity":1,"message":"173","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":18},{"ruleId":"141","severity":1,"message":"174","line":11,"column":15,"nodeType":"143","messageId":"144","endLine":11,"endColumn":18},{"ruleId":"141","severity":1,"message":"175","line":2,"column":9,"nodeType":"143","messageId":"144","endLine":2,"endColumn":12},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'setIsLoggedIn' is assigned a value but never used.","'useEffect' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'CustomSelect' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'useField' is defined but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'person' is assigned a value but never used.","'setPerson' is assigned a value but never used.","'button' is assigned a value but never used.","'database_id' is assigned a value but never used.","'CustomCheckbox' is assigned a value but never used.","'name' is assigned a value but never used.","'loginId' is assigned a value but never used.","'useContext' is defined but never used.","'useNavigate' is defined but never used.","'LoginContext' is defined but never used.","'yupToFormErrors' is defined but never used.","'Table' is defined but never used.","'navigate' is assigned a value but never used.","'results' is assigned a value but never used.","'BarChart' is defined but never used.","'res' is assigned a value but never used.","'Bar' is defined but never used.","no-global-assign","no-unsafe-negation"]
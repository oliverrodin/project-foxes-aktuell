{"ast":null,"code":"// import {React, useContext, useEffect, useState}from \"react\";\n// import { useNavigate } from 'react-router-dom'\n// import { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\n// import * as Yup from 'yup'\n// import axios from \"axios\";\n// import { LoginContext } from \"../Context/LoginContext\";\n// import './CreateReport.css'\n// import Navbar from './Navbar'\n// const database_id = '58d96ae9275547a7960f5cca7c93e836'\n// const CustomTextInput = ({label, ...props}) => {\n//   const [field, meta] = useField(props)\n//   return (\n//     <>\n//       <label htmlFor={props.id || props.name}>{label}</label>\n//       <input className=\"text-input\" {...field}{...props} />\n//       {meta.touch && meta.error ? (\n//         <div className=\"error\">{meta.error}</div> ) : null}\n//     </>\n//   )\n// }\n// const CustomCheckbox = ({children, ...props}) => {\n//   const [field, meta] = useField(props, 'checkbox')\n//   return (\n//     <>\n//       <label className=\"checkbox\">\n//         <input type=\"checkbox\" {...field}{...props} />\n//         {children}\n//       </label>\n//       {meta.touch && meta.error ? (\n//         <div className=\"error\">{meta.error}</div> ) : null}\n//     </>\n//   )\n// }\n// const CustomSelect = ({label, ...props}) => {\n//   const [field, meta] = useField(props)\n//   return (\n//     <>\n//       <label htmlFor={props.id || props.name}>{label}</label>\n//       <select {...field}{...props} />\n//       {meta.touch && meta.error ? (\n//         <div className=\"error\">{meta.error}</div> ) : null}\n//     </>\n//   )\n// }\n// function CreateReport() {\n//     const [project, setProject] = useState([])\n//     const [person, setPerson] = useState([])\n//     const { name, loginId } = useContext(LoginContext)\n//     const navigate = useNavigate();\n//     useEffect(()  => {\n//      axios.post(\"http://localhost:3001/getdatabase/project\", {data: \"\"}, { headers: {\n//       accessToken: sessionStorage.getItem(\"accessToken\")\n//     }}).then((response) => {\n//         setProject(response.data)\n//       }) \n//     }, [])\n//     console.log(project)\n//   return (\n//     <>\n//     <Navbar />\n//         <Formik\n//           initialValues={{\n//             project: \"\",\n//             date: \"\",\n//             hours: \"\",\n//             note:\"\",\n//             comment:\"\"\n//           }}\n//           validationSchema={\n//             Yup.object().shape({\n//             project: Yup.string().required(),\n//             date: Yup.date().required(),\n//             hours:Yup.number().required(),\n//             note: Yup.string().required(),\n//             comment: Yup.string().required(\"test\")\n//           })}\n//           onSubmit={(values, {setSubmitting, resetForm}) => {\n//             axios\n//               .post('http://localhost:3001/createtimereports', \n//                 values,\n//                 {\n//                   headers: {\n//                     accessToken: sessionStorage.getItem(\"accessToken\")\n//                   }\n//                 }\n//               )\n//               setTimeout(() => {\n//                 navigate(\"/home\")\n//                 resetForm();\n//                 setSubmitting(false)\n//               }, 2000)\n//           }}\n//           >\n//           {props => (\n//           <Form className=\"container\">\n//             <h1>Create time report</h1>\n//             <CustomSelect className=\"timeReportInput\" label=\"Project\" name=\"project\">\n//               <option value=\"\">Select Project</option>  \n//               {\n//                 project.map((pages) => {\n//                   return (\n//                     <>\n//                       <option value={pages.id}>{pages.name}</option> \n//                     </>\n//                   )\n//                 })\n//               }\n//             </CustomSelect>   \n//             <CustomTextInput className=\"timeReportInput\" label=\"Date\" name=\"date\" type=\"date\"/>\n//             <CustomTextInput className=\"timeReportInput\" label=\"Hours\" name=\"hours\" type=\"number\" placeholder='ex. 10...'/>\n//             <CustomTextInput className=\"timeReportInput\" label=\"Note\" name=\"note\" type=\"text\" placeholder='ex. meeting...'/>\n//             <CustomTextInput className=\"timeReportInput\" label=\"Comment\" name=\"comment\" type=\"text\" placeholder='ex. fixed this bug...'/>\n//             <button type='submit' className=\"btnPos\">{props.isSubmitting ? 'loading...' : 'Submit'}</button>\n//           </Form>\n//           )}\n//         </Formik>\n//     </>\n//   );\n// }\n// export default CreateReport;","map":{"version":3,"sources":["C:/Users/Pom/Desktop/Edugrade Sundsvall/HTML/project-foxes-aktuell-sprint-2/project-foxes-aktuell/frontend/src/Pages/CreateReport.js"],"names":[],"mappingssourcesContent":["// import {React, useContext, useEffect, useState}from \"react\";\r\n// import { useNavigate } from 'react-router-dom'\r\n// import { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\r\n// import * as Yup from 'yup'\r\n// import axios from \"axios\";\r\n// import { LoginContext } from \"../Context/LoginContext\";\r\n// import './CreateReport.css'\r\n// import Navbar from './Navbar'\r\n\r\n// const database_id = '58d96ae9275547a7960f5cca7c93e836'\r\n\r\n// const CustomTextInput = ({label, ...props}) => {\r\n//   const [field, meta] = useField(props)\r\n\r\n//   return (\r\n//     <>\r\n//       <label htmlFor={props.id || props.name}>{label}</label>\r\n//       <input className=\"text-input\" {...field}{...props} />\r\n//       {meta.touch && meta.error ? (\r\n//         <div className=\"error\">{meta.error}</div> ) : null}\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// const CustomCheckbox = ({children, ...props}) => {\r\n//   const [field, meta] = useField(props, 'checkbox')\r\n\r\n//   return (\r\n//     <>\r\n//       <label className=\"checkbox\">\r\n//         <input type=\"checkbox\" {...field}{...props} />\r\n//         {children}\r\n//       </label>\r\n//       {meta.touch && meta.error ? (\r\n//         <div className=\"error\">{meta.error}</div> ) : null}\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// const CustomSelect = ({label, ...props}) => {\r\n//   const [field, meta] = useField(props)\r\n\r\n//   return (\r\n//     <>\r\n//       <label htmlFor={props.id || props.name}>{label}</label>\r\n//       <select {...field}{...props} />\r\n//       {meta.touch && meta.error ? (\r\n//         <div className=\"error\">{meta.error}</div> ) : null}\r\n//     </>\r\n//   )\r\n// }\r\n\r\n\r\n// function CreateReport() {\r\n//     const [project, setProject] = useState([])\r\n//     const [person, setPerson] = useState([])\r\n//     const { name, loginId } = useContext(LoginContext)\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(()  => {\r\n//      axios.post(\"http://localhost:3001/getdatabase/project\", {data: \"\"}, { headers: {\r\n//       accessToken: sessionStorage.getItem(\"accessToken\")\r\n//     }}).then((response) => {\r\n//         setProject(response.data)\r\n        \r\n//       }) \r\n\r\n//     }, [])\r\n\r\n//     console.log(project)\r\n\r\n//   return (\r\n//     <>\r\n//     <Navbar />\r\n      \r\n//         <Formik\r\n//           initialValues={{\r\n            \r\n//             project: \"\",\r\n//             date: \"\",\r\n//             hours: \"\",\r\n//             note:\"\",\r\n//             comment:\"\"\r\n//           }}\r\n//           validationSchema={\r\n//             Yup.object().shape({\r\n//             project: Yup.string().required(),\r\n//             date: Yup.date().required(),\r\n//             hours:Yup.number().required(),\r\n//             note: Yup.string().required(),\r\n//             comment: Yup.string().required(\"test\")\r\n//           })}\r\n//           onSubmit={(values, {setSubmitting, resetForm}) => {\r\n//             axios\r\n//               .post('http://localhost:3001/createtimereports', \r\n//                 values,\r\n//                 {\r\n//                   headers: {\r\n//                     accessToken: sessionStorage.getItem(\"accessToken\")\r\n//                   }\r\n//                 }\r\n//               )\r\n              \r\n//               setTimeout(() => {\r\n//                 navigate(\"/home\")\r\n//                 resetForm();\r\n//                 setSubmitting(false)\r\n//               }, 2000)\r\n\r\n//           }}\r\n//           >\r\n//           {props => (\r\n//           <Form className=\"container\">\r\n//             <h1>Create time report</h1>\r\n//             <CustomSelect className=\"timeReportInput\" label=\"Project\" name=\"project\">\r\n//               <option value=\"\">Select Project</option>  \r\n//               {\r\n//                 project.map((pages) => {\r\n//                   return (\r\n//                     <>\r\n//                       <option value={pages.id}>{pages.name}</option> \r\n//                     </>\r\n//                   )\r\n                  \r\n//                 })\r\n//               }\r\n//             </CustomSelect>   \r\n//             <CustomTextInput className=\"timeReportInput\" label=\"Date\" name=\"date\" type=\"date\"/>\r\n//             <CustomTextInput className=\"timeReportInput\" label=\"Hours\" name=\"hours\" type=\"number\" placeholder='ex. 10...'/>\r\n//             <CustomTextInput className=\"timeReportInput\" label=\"Note\" name=\"note\" type=\"text\" placeholder='ex. meeting...'/>\r\n//             <CustomTextInput className=\"timeReportInput\" label=\"Comment\" name=\"comment\" type=\"text\" placeholder='ex. fixed this bug...'/>\r\n            \r\n            \r\n\r\n//             <button type='submit' className=\"btnPos\">{props.isSubmitting ? 'loading...' : 'Submit'}</button>\r\n//           </Form>\r\n//           )}\r\n//         </Formik>\r\n      \r\n//     </>\r\n//   );\r\n// }\r\n\r\n\r\n// export default CreateReport;\r\n"]},"metadata":{},"sourceType":"module"}
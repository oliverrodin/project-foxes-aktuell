{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\project-foxes-aktuell\\\\frontend\\\\src\\\\Pages\\\\Weeks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar, Line } from 'react-chartjs-2';\nimport { BarChart } from '../Components/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst getData = async () => {\n  await axios.post(\"http://localhost:3001/getdatabase/weeks\").then(res => {\n    for (let index = 0; index <= 51; index++) {\n      res.data.forEach(element => {\n        if (element.week === labels[index]) {\n          data[index] += element.hours;\n        }\n      });\n    }\n\n    console.log(labels);\n    console.log(data); // res.data.forEach(element => {\n    //     labels.push(element.week)\n    //     data.push(element.hours)\n    // });\n  });\n  return {\n    labels,\n    data\n  };\n};\n\nfunction Weeks() {\n  _s();\n\n  useEffect(async () => {\n    await getData().then(res => {\n      setChartData(res.data);\n      setChartLabels(res.labels);\n    });\n    console.log(getData());\n    console.log(chartData);\n    console.log(chartLabels);\n  }, []);\n  const [chartData, setChartData] = useState([]);\n  const [chartLabels, setChartLabels] = useState([]);\n\n  if (!chartData || chartLabels) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: getData().then(res => {\n        res.data;\n      }),\n      labels: getData().then(res => {\n        res.labels;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weeks, \"DIQZXqAHKn20ZBotzTQHt0Ewm3Q=\");\n\n_c = Weeks;\nexport default Weeks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weeks\");","map":{"version":3,"sources":["C:/REACT/project-foxes-aktuell/frontend/src/Pages/Weeks.js"],"names":["React","useEffect","useState","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","Line","BarChart","register","getData","post","then","res","index","data","forEach","element","week","labels","hours","console","log","Weeks","setChartData","setChartLabels","chartData","chartLabels"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,KAAK,IAAIC,OADb,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,MAPJ,QAQO,UARP;AASA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,iBAAxB;AAIA,SAASC,QAAT,QAAyB,qBAAzB;;AAEAT,OAAO,CAACU,QAAR,CACIT,aADJ,EAEIC,WAFJ,EAGIC,UAHJ,EAIIC,KAJJ,EAKIC,OALJ,EAMIC,MANJ;;AAUA,MAAMK,OAAO,GAAG,YAAY;AAIxB,QAAMb,KAAK,CAACc,IAAN,CAAW,yCAAX,EAAsDC,IAAtD,CAA2DC,GAAG,IAAI;AAGpE,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAI,EAA7B,EAAiCA,KAAK,EAAtC,EAA0C;AAEtCD,MAAAA,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiBC,OAAO,IAAI;AACxB,YAAIA,OAAO,CAACC,IAAR,KAAiBC,MAAM,CAACL,KAAD,CAA3B,EAAoC;AAChCC,UAAAA,IAAI,CAACD,KAAD,CAAJ,IAAeG,OAAO,CAACG,KAAvB;AACH;AACJ,OAJD;AASH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EAhBoE,CAiBpE;AACA;AACA;AACA;AAEH,GAtBK,CAAN;AAuBA,SAAO;AACHI,IAAAA,MADG;AAEHJ,IAAAA;AAFG,GAAP;AAKH,CAhCD;;AAkCA,SAASQ,KAAT,GAAiB;AAAA;;AAEb5B,EAAAA,SAAS,CAAE,YAAY;AACnB,UAAMe,OAAO,GAAGE,IAAV,CAAeC,GAAG,IAAI;AACxBW,MAAAA,YAAY,CAACX,GAAG,CAACE,IAAL,CAAZ;AACAU,MAAAA,cAAc,CAACZ,GAAG,CAACM,MAAL,CAAd;AAEH,KAJK,CAAN;AAKAE,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAO,EAAnB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AACH,GATQ,EASN,EATM,CAAT;AAUA,QAAM,CAACD,SAAD,EAAYF,YAAZ,IAA4B5B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC+B,WAAD,EAAcF,cAAd,IAAgC7B,QAAQ,CAAC,EAAD,CAA9C;;AACA,MAAG,CAAC8B,SAAD,IAAcC,WAAjB,EAA8B;AAC1B,WAAO,IAAP;AACH;;AAEH,sBAEE;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEjB,OAAO,GAAGE,IAAV,CAAeC,GAAG,IAAI;AAACA,QAAAA,GAAG,CAACE,IAAJ;AAAS,OAAhC,CAAhB;AAAmD,MAAA,MAAM,EAAEL,OAAO,GAAGE,IAAV,CAAeC,GAAG,IAAI;AAACA,QAAAA,GAAG,CAACM,MAAJ;AAAW,OAAlC;AAA3D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAMD;;GAxBQI,K;;KAAAA,K;AA0BT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n} from \"chart.js\"\r\nimport {Bar, Line} from 'react-chartjs-2'\r\n\r\n\r\n\r\nimport { BarChart } from '../Components/Chart'\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n)\r\n\r\n\r\nconst getData = async () => {\r\n   \r\n\r\n\r\n    await axios.post(\"http://localhost:3001/getdatabase/weeks\").then(res => {\r\n        \r\n\r\n        for (let index = 0; index <= 51; index++) {\r\n            \r\n            res.data.forEach(element => {\r\n                if (element.week === labels[index]) {\r\n                    data[index] += element.hours\r\n                }\r\n            });\r\n            \r\n\r\n            \r\n            \r\n        }\r\n        console.log(labels)\r\n        console.log(data)\r\n        // res.data.forEach(element => {\r\n        //     labels.push(element.week)\r\n        //     data.push(element.hours)\r\n        // });\r\n\r\n    })\r\n    return {\r\n        labels,\r\n        data\r\n        \r\n    }\r\n}\r\n\r\nfunction Weeks() {\r\n    \r\n    useEffect( async () => {\r\n        await getData().then(res => {\r\n            setChartData(res.data)\r\n            setChartLabels(res.labels)\r\n            \r\n        })\r\n        console.log(getData())\r\n        console.log(chartData)\r\n        console.log(chartLabels)\r\n    }, [])\r\n    const [chartData, setChartData] = useState([])\r\n    const [chartLabels, setChartLabels] = useState([])\r\n    if(!chartData || chartLabels) {\r\n        return null\r\n    }\r\n    \r\n  return (\r\n    \r\n    <div>\r\n        <BarChart data={getData().then(res => {res.data})} labels={getData().then(res => {res.labels})} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weeks"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\project-foxes-aktuell\\\\frontend\\\\src\\\\Pages\\\\Project.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, yupToFormErrors } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport './Project.css';\nimport CustomTextInput from '../Components/CustomTextInput';\nimport CustomSelect from '../Components/CustomSelect';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Project() {\n  _s();\n\n  const navigate = useNavigate();\n  const [person, setPerson] = useState([]);\n  const [project, setProject] = useState([]);\n  const [filtProject, setFiltProject] = useState([]);\n  const [dateFrom, setDateFrom] = useState(\"\");\n  const [dateTo, setDateTo] = useState(\"\");\n  const [isPressed, setIsPressed] = useState(false);\n  let sumHours = 0;\n\n  const summing = () => {\n    const results = filtProject.map(row => {\n      return sumHours += row.hours;\n    });\n  };\n\n  useEffect(() => {\n    axios.post(\"http://localhost:3001/project/getprojects\", {\n      data: \"\"\n    }, {\n      headers: {\n        accessToken: sessionStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setProject(response.data);\n    });\n    axios.post(\"http://localhost:3001/project/people\", {\n      data: \"\"\n    }, {\n      headers: {\n        accessToken: sessionStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setPerson(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-page\",\n      children: [/*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          person: \"\",\n          project: \"\",\n          dateFrom: \"\",\n          dateTo: \"\"\n        },\n        validationSchema: Yup.object().shape({\n          person: Yup.string().required(),\n          project: Yup.string().required(),\n          dateFrom: Yup.string().required(),\n          dateTo: Yup.string().required()\n        }),\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting,\n            resetForm\n          } = _ref;\n          axios.post('http://localhost:3001/project', values, {\n            headers: {\n              accessToken: sessionStorage.getItem(\"accessToken\")\n            }\n          }).then(res => {\n            setFiltProject(res.data);\n            console.log(values.dateFrom);\n          });\n          setDateFrom(values.dateFrom);\n          setDateTo(values.dateTo);\n          setTimeout(() => {\n            resetForm();\n            setSubmitting(false);\n            setIsPressed(true);\n          }, 2000);\n          console.log(values);\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: isPressed ? \"Projekt: \" + filtProject[0].projectName : \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: isPressed ? \" \" : \"Välj projekt och tidspan för att se mer information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n            className: \"\",\n            label: \"Medarbetare\",\n            name: \"person\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"V\\xE4lj person\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), person.map(pages => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pages.id,\n                  children: pages.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n            className: \"\",\n            label: \"Projekt\",\n            name: \"project\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"V\\xE4lj medarbetare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), project.map(pages => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pages.name,\n                  children: pages.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            className: \"\",\n            label: \"Fr\\xE5n: \",\n            name: \"dateFrom\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            className: \"\",\n            label: \"Till: \",\n            name: \"dateTo\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"\",\n            children: props.isSubmitting ? 'loading...' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filtered-reports-container\",\n        children: [filtProject.map(row => {\n          return /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Datum: \" + row.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Namn: \" + row.personName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Timmar: \" + row.hours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 28\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [summing(), isPressed ? \"Totalt \" + sumHours + \" timmar\" : \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [isPressed ? \"Vald period: \" + dateFrom + \" - \" : \" \", \"  \", isPressed ? dateTo : \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Project, \"0aCHQ02oQ5PN6ra5GdNt+bdPKwM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["C:/REACT/project-foxes-aktuell/frontend/src/Pages/Project.js"],"names":["React","useState","useEffect","useNavigate","Formik","Form","yupToFormErrors","Yup","axios","CustomTextInput","CustomSelect","Navbar","Project","navigate","person","setPerson","project","setProject","filtProject","setFiltProject","dateFrom","setDateFrom","dateTo","setDateTo","isPressed","setIsPressed","sumHours","summing","results","map","row","hours","post","data","headers","accessToken","sessionStorage","getItem","then","response","object","shape","string","required","values","setSubmitting","resetForm","res","console","log","setTimeout","props","projectName","pages","id","name","isSubmitting","date","personName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Formik, Form, yupToFormErrors } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\nimport './Project.css'\r\n\r\nimport CustomTextInput from '../Components/CustomTextInput'\r\nimport CustomSelect from '../Components/CustomSelect'\r\n\r\nimport Navbar from './Navbar'\r\n\r\n\r\nfunction Project() {\r\n    const navigate = useNavigate();\r\n    const [person, setPerson] = useState([])\r\n    const [project, setProject] = useState([])\r\n    const [filtProject, setFiltProject] = useState([])\r\n    const [dateFrom, setDateFrom] = useState(\"\")\r\n    const [dateTo, setDateTo] = useState(\"\")\r\n    const [isPressed, setIsPressed] = useState(false)\r\n    \r\n    let sumHours = 0;\r\n\r\n    const summing = () => {  \r\n    const results = filtProject.map((row) => {\r\n        return (\r\n          sumHours += row.hours\r\n        )\r\n      })\r\n    }\r\n    \r\n    useEffect(()  => {\r\n        axios.post(\"http://localhost:3001/project/getprojects\", {data: \"\"}, { headers: {\r\n         accessToken: sessionStorage.getItem(\"accessToken\")\r\n       }}).then((response) => {\r\n           setProject(response.data)\r\n           \r\n           \r\n         }) \r\n         axios.post(\"http://localhost:3001/project/people\", {data: \"\"}, { headers: {\r\n          accessToken: sessionStorage.getItem(\"accessToken\")\r\n        }}).then((response) => {\r\n            setPerson(response.data)\r\n            \r\n            \r\n          }) \r\n\r\n       }, [])\r\n  return (\r\n    <>\r\n        <Navbar />\r\n        <div className='project-page'>  \r\n        <Formik\r\n          initialValues={{\r\n            person: \"\",\r\n            project: \"\",\r\n            dateFrom: \"\",\r\n            dateTo: \"\",\r\n          }}\r\n          validationSchema={\r\n            Yup.object().shape({\r\n            person: Yup.string().required(),\r\n            project: Yup.string().required(),\r\n            dateFrom: Yup.string().required(),\r\n            dateTo: Yup.string().required()\r\n          })}\r\n          onSubmit={(values, {setSubmitting, resetForm}) => {\r\n            axios\r\n              .post('http://localhost:3001/project', \r\n                values,\r\n                {\r\n                  headers: {\r\n                    accessToken: sessionStorage.getItem(\"accessToken\")\r\n                  }\r\n                }\r\n              ).then((res) => {\r\n                    setFiltProject(res.data)\r\n                    console.log(values.dateFrom)\r\n              })\r\n              \r\n              setDateFrom(values.dateFrom)\r\n              setDateTo(values.dateTo)\r\n              \r\n              \r\n              setTimeout(() => {  \r\n                resetForm();\r\n                setSubmitting(false)\r\n                setIsPressed(true)\r\n              }, 2000)\r\n              \r\n              console.log(values)\r\n            \r\n            \r\n          }}\r\n          >\r\n          {props => (\r\n          <Form className=\"\">\r\n            <h1>{isPressed ? \"Projekt: \" + filtProject[0].projectName : \" \"}</h1>\r\n            <h3>{isPressed ? \" \" : \"Välj projekt och tidspan för att se mer information\"}</h3>\r\n            \r\n            <CustomSelect className=\"\" label=\"Medarbetare\" name=\"person\">\r\n              <option value=\"\">Välj person</option>  \r\n              {\r\n                person.map((pages) => {\r\n                  return (\r\n                    <>\r\n                      <option value={pages.id}>{pages.name}</option> \r\n                    </>\r\n                  )\r\n                  \r\n                })\r\n              }\r\n            </CustomSelect>   \r\n\r\n            <CustomSelect className=\"\" label=\"Projekt\" name=\"project\">\r\n              <option value=\"\">Välj medarbetare</option>  \r\n              {\r\n                project.map((pages) => {\r\n                  return (\r\n                    <>\r\n                      <option value={pages.name}>{pages.name}</option> \r\n                    </>\r\n                  )\r\n                  \r\n                })\r\n              }\r\n            </CustomSelect>   \r\n            <CustomTextInput className=\"\" label=\"Från: \" name=\"dateFrom\" type=\"date\"/>\r\n            <CustomTextInput className=\"\" label=\"Till: \" name=\"dateTo\" type=\"date\"/>\r\n            \r\n            \r\n            \r\n\r\n            <button type='submit' className=\"\">{props.isSubmitting ? 'loading...' : 'Submit'}</button>\r\n          </Form>\r\n          )}\r\n        </Formik>\r\n\r\n           <div className='filtered-reports-container'>\r\n             \r\n             \r\n               {\r\n                   filtProject.map((row) => {\r\n                       return (\r\n                           <ul>\r\n                               <li>{\"Datum: \" + row.date}</li>\r\n                               <li>{\"Namn: \" + row.personName}</li>\r\n                               <li>{\"Timmar: \" + row.hours}</li>\r\n                           </ul>\r\n                       )\r\n                   })\r\n               }\r\n               \r\n               <h3>{summing()}{isPressed ? \"Totalt \" + sumHours + \" timmar\" : \" \" }</h3>\r\n               <h3>{isPressed ?  \"Vald period: \" + dateFrom  + \" - \" : \" \"}  {isPressed ? dateTo : \" \"}</h3>\r\n               \r\n           </div>\r\n\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Project"]},"metadata":{},"sourceType":"module"}
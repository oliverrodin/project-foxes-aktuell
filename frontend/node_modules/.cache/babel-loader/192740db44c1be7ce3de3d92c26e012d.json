{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\project-foxes-aktuell\\\\frontend\\\\src\\\\Pages\\\\Registration.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\nimport * as Yup from 'yup'; //Pages\n\nimport CustomTextInput from '../Components/CustomTextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Registration() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        username: \"\",\n        password: \"\"\n      },\n      validationSchema: Yup.object().shape({\n        username: Yup.string().min(3).max(15).required(),\n        password: Yup.string().min(4).max(20).required(),\n        email: Yup.email().required(),\n        name: Yup.string().min\n      }),\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting,\n          resetForm\n        } = _ref;\n        fetch('http://localhost:3001/auth', {\n          method: 'POST',\n          url: 'https://api.notion.com/v1/pages',\n          body: JSON.stringify(values),\n          headers: {\n            \"Content-Type\": 'application/json'\n          }\n        });\n        resetForm();\n        setSubmitting(false);\n      },\n      children: props => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(CustomTextInput, {\n          label: \"Username: \",\n          name: \"username\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n          label: \"Password: \",\n          name: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: props.isSubmitting ? 'loading...' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["C:/REACT/project-foxes-aktuell/frontend/src/Pages/Registration.js"],"names":["React","Formik","Form","Field","ErrorMessage","useField","Yup","CustomTextInput","Registration","name","email","username","password","object","shape","string","min","max","required","values","setSubmitting","resetForm","fetch","method","url","body","JSON","stringify","headers","props","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,EAA4CC,QAA5C,QAA4D,QAA5D;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;;;AAEA,SAASC,YAAT,GAAwB;AACtB,sBACE;AAAA,2BACE,QAAC,MAAD;AACA,MAAA,aAAa,EAAE;AACXC,QAAAA,IAAI,EAAE,EADK;AAEXC,QAAAA,KAAK,EAAE,EAFI;AAGXC,QAAAA,QAAQ,EAAE,EAHC;AAIXC,QAAAA,QAAQ,EAAE;AAJC,OADf;AAUA,MAAA,gBAAgB,EAAEN,GAAG,CAACO,MAAJ,GAAaC,KAAb,CAAmB;AACjCH,QAAAA,QAAQ,EAAEL,GAAG,CAACS,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B,EADuB;AAEjCN,QAAAA,QAAQ,EAAEN,GAAG,CAACS,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B,EAFuB;AAGjCR,QAAAA,KAAK,EAAEJ,GAAG,CAACI,KAAJ,GAAYQ,QAAZ,EAH0B;AAIjCT,QAAAA,IAAI,EAAEH,GAAG,CAACS,MAAJ,GAAaC;AAJc,OAAnB,CAVlB;AAiBA,MAAA,QAAQ,EAAG,CAACG,MAAD,WAAwC;AAAA,YAA/B;AAACC,UAAAA,aAAD;AAAgBC,UAAAA;AAAhB,SAA+B;AACjDC,QAAAA,KAAK,CAAC,4BAAD,EAA8B;AACjCC,UAAAA,MAAM,EAAE,MADyB;AAEjCC,UAAAA,GAAG,EAAE,iCAF4B;AAGjCC,UAAAA,IAAI,EACFC,IAAI,CAACC,SAAL,CAAeR,MAAf,CAJ+B;AAKjCS,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB;AALwB,SAA9B,CAAL;AAQAP,QAAAA,SAAS;AACTD,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OA5BD;AAAA,gBA8BKS,KAAK,iBACJ,QAAC,IAAD;AAAA,gCACE,QAAC,eAAD;AAAiB,UAAA,KAAK,EAAC,YAAvB;AAAoC,UAAA,IAAI,EAAC,UAAzC;AAAoD,UAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,eAAD;AAAiB,UAAA,KAAK,EAAC,YAAvB;AAAoC,UAAA,IAAI,EAAC,UAAzC;AAAoD,UAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,QAAhC;AAAA,oBAA0CA,KAAK,CAACC,YAAN,GAAqB,YAArB,GAAoC;AAA9E;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BN;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4CD;;KA7CQtB,Y;AA+CT,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\r\nimport * as Yup from 'yup'\r\n\r\n//Pages\r\nimport CustomTextInput from '../Components/CustomTextInput'\r\n\r\nfunction Registration() {\r\n  return (\r\n    <>\r\n      <Formik\r\n      initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          \r\n\r\n\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n          username: Yup.string().min(3).max(15).required(),\r\n          password: Yup.string().min(4).max(20).required(),\r\n          email: Yup.email().required(),\r\n          name: Yup.string().min\r\n\r\n      })}\r\n      onSubmit={ (values, {setSubmitting, resetForm}) => {\r\n        fetch('http://localhost:3001/auth',{\r\n          method: 'POST',\r\n          url: 'https://api.notion.com/v1/pages',\r\n          body: (\r\n            JSON.stringify(values)),\r\n          headers: { \"Content-Type\": 'application/json' }\r\n        }) \r\n        \r\n        resetForm();\r\n        setSubmitting(false)\r\n      }}\r\n        >\r\n          {props => (\r\n            <Form>\r\n              <CustomTextInput label=\"Username: \" name=\"username\" type=\"text\" />\r\n              <CustomTextInput label=\"Password: \" name=\"password\" type=\"password\" /> \r\n              <button type='submit' className=\"button\">{props.isSubmitting ? 'loading...' : 'Register'}</button>\r\n            </Form>\r\n\r\n          )}  \r\n          \r\n      </Formik>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Registration"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\project-foxes-aktuell\\\\frontend\\\\src\\\\Pages\\\\CreateReport.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst database_id = '58d96ae9275547a7960f5cca7c93e836';\n\nconst CustomTextInput = _ref => {\n  _s();\n\n  let {\n    label,\n    ...props\n  } = _ref;\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), meta.touch && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(CustomTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = CustomTextInput;\n\nconst CustomCheckbox = _ref2 => {\n  _s2();\n\n  let {\n    children,\n    ...props\n  } = _ref2;\n  const [field, meta] = useField(props, 'checkbox');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        ...field,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), meta.touch && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s2(CustomCheckbox, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c2 = CustomCheckbox;\n\nconst CustomSelect = _ref3 => {\n  _s3();\n\n  let {\n    label,\n    ...props\n  } = _ref3;\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", { ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), meta.touch && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s3(CustomSelect, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c3 = CustomSelect;\n\nfunction CreateReport() {\n  _s4();\n\n  const [project, setProject] = useState([]);\n  const [person, setPerson] = useState([]);\n  useEffect(() => {\n    axios.post(\"http://localhost:3001/getdatabase/project\").then(response => {\n      setProject(response.data);\n    });\n    axios.post(\"http://localhost:3001/getdatabase/people\").then(response => {\n      setPerson(response.data);\n    });\n  }, []);\n  console.log(project);\n  /* const Projects = () => {\r\n    return(\r\n      <>\r\n        <options></option>\r\n      </>\r\n    )\r\n  } */\n\n  const onSubmit = data => {\n    fetch('http://localhost:3001/createtimereports', {\n      method: 'POST',\n      url: 'https://api.notion.com/v1/pages',\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": 'application/json',\n        accessToken: sessionStorage.getItem(\"accessToken\")\n      }\n    });\n    console.log(JSON.stringify(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createReportPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        person: \"\",\n        project: \"\",\n        date: \"\",\n        hours: \"\",\n        note: \"\",\n        comment: \"\"\n      },\n      validationSchema: Yup.object().shape({\n        person: Yup.string().required(),\n        project: Yup.string().required(),\n        date: Yup.date().required(),\n        hours: Yup.number().required(),\n        note: Yup.string().required(),\n        comment: Yup.string().required()\n      }),\n      onSubmit: (values, _ref4) => {\n        let {\n          setSubmitting,\n          resetForm\n        } = _ref4;\n        axios.post('http://localhost:3001/createtimereports', values, {\n          headers: {\n            accessToken: sessionStorage.getItem\n          }\n        });\n        fetch('http://localhost:3001/createtimereports', {\n          method: 'POST',\n          url: 'https://api.notion.com/v1/pages',\n          body: JSON.stringify(values),\n          headers: {\n            \"Content-Type\": 'application/json'\n          }\n        });\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          resetForm();\n          setSubmitting(false);\n        }, 2000);\n      },\n      children: props => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create time report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n          label: \"Person\",\n          name: \"person\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Person\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), person.map(pages => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pages.id,\n                children: pages.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n          label: \"Project\",\n          name: \"project\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), project.map(pages => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pages.id,\n                children: pages.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n          label: \"Date\",\n          name: \"date\",\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n          label: \"Hours\",\n          name: \"hours\",\n          type: \"number\",\n          placeholder: \"ex. 10...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n          label: \"Note\",\n          name: \"note\",\n          type: \"text\",\n          placeholder: \"ex. meeting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n          label: \"Comment\",\n          name: \"comment\",\n          type: \"text\",\n          placeholder: \"ex. fixed this bug...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input\",\n          children: \"Comment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: props.isSubmitting ? 'loading...' : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(CreateReport, \"zzS/aj0WczH3qBWvOt3f5Fycu0Q=\");\n\n_c4 = CreateReport;\nexport default CreateReport;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CustomTextInput\");\n$RefreshReg$(_c2, \"CustomCheckbox\");\n$RefreshReg$(_c3, \"CustomSelect\");\n$RefreshReg$(_c4, \"CreateReport\");","map":{"version":3,"sources":["C:/REACT/project-foxes-aktuell/frontend/src/Pages/CreateReport.js"],"names":["React","useEffect","useState","Formik","Form","Field","ErrorMessage","useField","Yup","axios","database_id","CustomTextInput","label","props","field","meta","id","name","touch","error","CustomCheckbox","children","CustomSelect","CreateReport","project","setProject","person","setPerson","post","then","response","data","console","log","onSubmit","fetch","method","url","body","JSON","stringify","headers","accessToken","sessionStorage","getItem","date","hours","note","comment","object","shape","string","required","number","values","setSubmitting","resetForm","setTimeout","alert","map","pages","isSubmitting"],"mappings":"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","sourcesContent":["import {React, useEffect, useState}from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage, useField } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport axios from \"axios\";\r\n\r\nconst database_id = '58d96ae9275547a7960f5cca7c93e836'\r\n\r\nconst CustomTextInput = ({label, ...props}) => {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field}{...props} />\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nconst CustomCheckbox = ({children, ...props}) => {\r\n  const [field, meta] = useField(props, 'checkbox')\r\n\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input type=\"checkbox\" {...field}{...props} />\r\n        {children}\r\n      </label>\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nconst CustomSelect = ({label, ...props}) => {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <select {...field}{...props} />\r\n      {meta.touch && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div> ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction CreateReport() {\r\n    const [project, setProject] = useState([])\r\n    const [person, setPerson] = useState([])\r\n    useEffect(()  => {\r\n     axios.post(\"http://localhost:3001/getdatabase/project\").then((response) => {\r\n        setProject(response.data)\r\n        \r\n      }) \r\n\r\n      axios.post(\"http://localhost:3001/getdatabase/people\").then((response) => {\r\n        setPerson(response.data)\r\n        \r\n      }) \r\n      \r\n    }, [])\r\n\r\n    console.log(project)\r\n\r\n    /* const Projects = () => {\r\n      return(\r\n        <>\r\n          <options></option>\r\n        </>\r\n      )\r\n    } */\r\n    \r\n    const onSubmit = (data) => {\r\n\r\n        fetch('http://localhost:3001/createtimereports',{\r\n        method: 'POST',\r\n        url: 'https://api.notion.com/v1/pages',\r\n        body: (\r\n          JSON.stringify(data)),\r\n        headers: { \"Content-Type\": 'application/json',\r\n                    accessToken: sessionStorage.getItem(\"accessToken\")}\r\n      }) \r\n      \r\n       console.log(JSON.stringify(data))\r\n      \r\n    };\r\n\r\n  return (\r\n    <div className='createReportPage'>\r\n      <Formik\r\n        initialValues={{\r\n          person: \"\",\r\n          project: \"\",\r\n          date: \"\",\r\n          hours: \"\",\r\n          note:\"\",\r\n          comment:\"\"\r\n        }}\r\n        validationSchema={\r\n          Yup.object().shape({\r\n          person: Yup.string().required(),\r\n          project: Yup.string().required(),\r\n          date: Yup.date().required(),\r\n          hours:Yup.number().required(),\r\n          note: Yup.string().required(),\r\n          comment: Yup.string().required()\r\n        })}\r\n        onSubmit={(values, {setSubmitting, resetForm}) => {\r\n          axios\r\n            .post('http://localhost:3001/createtimereports', \r\n              values,\r\n              {\r\n                headers: {\r\n                  accessToken: sessionStorage.getItem\r\n                }\r\n              }\r\n              )\r\n          fetch('http://localhost:3001/createtimereports',{\r\n            method: 'POST',\r\n            url: 'https://api.notion.com/v1/pages',\r\n            body: (\r\n              JSON.stringify(values)),\r\n            headers: { \"Content-Type\": 'application/json'}\r\n          }) \r\n\r\n          setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2))\r\n            resetForm();\r\n            setSubmitting(false)\r\n          }, 2000)\r\n        }}\r\n        >\r\n        {props => (\r\n        <Form className=\"container\">\r\n          <h1>Create time report</h1>\r\n          <CustomSelect label=\"Person\" name=\"person\">\r\n            <option value=\"\">Select Person</option>\r\n            {\r\n              person.map((pages) => {\r\n                return (\r\n                  <>\r\n                    <option value={pages.id}>{pages.name}</option> \r\n                  </>\r\n                )\r\n                \r\n              })\r\n            }  \r\n          </CustomSelect>\r\n          <CustomSelect label=\"Project\" name=\"project\">\r\n            <option value=\"\">Select Project</option>  \r\n            {\r\n              project.map((pages) => {\r\n                return (\r\n                  <>\r\n                    <option value={pages.id}>{pages.name}</option> \r\n                  </>\r\n                )\r\n                \r\n              })\r\n            }\r\n          </CustomSelect>   \r\n          <CustomTextInput label=\"Date\" name=\"date\" type=\"date\"/>\r\n          <CustomTextInput label=\"Hours\" name=\"hours\" type=\"number\" placeholder='ex. 10...'/>\r\n          <CustomTextInput label=\"Note\" name=\"note\" type=\"text\" placeholder='ex. meeting...'/>\r\n          <CustomTextInput label=\"Comment\" name=\"comment\" type=\"text\" placeholder='ex. fixed this bug...'/>\r\n          <label className=\"input\">Comment:</label>\r\n          \r\n\r\n          <button type='submit' className=\"button\">{props.isSubmitting ? 'loading...' : 'Submit'}</button>\r\n        </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default CreateReport;\r\n"]},"metadata":{},"sourceType":"module"}
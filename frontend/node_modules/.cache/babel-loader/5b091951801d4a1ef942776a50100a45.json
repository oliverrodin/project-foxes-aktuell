{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\project-foxes-aktuell\\\\frontend\\\\src\\\\Pages\\\\Weeks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar, Line } from 'react-chartjs-2';\nimport { BarChart } from '../Components/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst getData = async () => {\n  await axios.post(\"http://localhost:3001/getdatabase/weeks\").then(res => {\n    for (let index = 0; index <= 51; index++) {\n      res.data.forEach(element => {\n        if (element.week === labels[index]) {\n          data[index] += element.hours;\n        }\n      });\n    } // res.data.forEach(element => {\n    //     labels.push(element.week)\n    //     data.push(element.hours)\n    // });\n\n  });\n  return {\n    labels,\n    data\n  };\n};\n\nfunction Weeks() {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    datasets: []\n  });\n  const [chartOptions, setChartOptions] = useState({});\n\n  const chart = () => {\n    let data = [];\n    let labels = [];\n    setChartData({\n      labels: [\"v1\", \"v2\", \"v3\", \"v4\"],\n      datasets: [{\n        label: \"Arbetade timmar\",\n        data: [140, 130, 160, 90],\n        borderColor: \"rgb(53, 162, 235)\",\n        backgroundColor: \"rgba(53, 162, 235, 0.4)\"\n      }]\n    });\n    setChartOptions({\n      responsive: true,\n      plugins: {\n        Legend: {\n          position: \"top\"\n        },\n        Title: {\n          display: true,\n          text: \"Hours worked\"\n        }\n      }\n    });\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weeks, \"VbDqwENU/EDVcrm2f6tYHA4DFFM=\");\n\n_c = Weeks;\nexport default Weeks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weeks\");","map":{"version":3,"sources":["C:/REACT/project-foxes-aktuell/frontend/src/Pages/Weeks.js"],"names":["React","useEffect","useState","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","Line","BarChart","register","getData","post","then","res","index","data","forEach","element","week","labels","hours","Weeks","chartData","setChartData","datasets","chartOptions","setChartOptions","chart","label","borderColor","backgroundColor","responsive","plugins","position","display","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,KAAK,IAAIC,OADb,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,MAPJ,QAQO,UARP;AASA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,iBAAxB;AAIA,SAASC,QAAT,QAAyB,qBAAzB;;AAEAT,OAAO,CAACU,QAAR,CACIT,aADJ,EAEIC,WAFJ,EAGIC,UAHJ,EAIIC,KAJJ,EAKIC,OALJ,EAMIC,MANJ;;AAUA,MAAMK,OAAO,GAAG,YAAY;AAIxB,QAAMb,KAAK,CAACc,IAAN,CAAW,yCAAX,EAAsDC,IAAtD,CAA2DC,GAAG,IAAI;AAGpE,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAI,EAA7B,EAAiCA,KAAK,EAAtC,EAA0C;AAEtCD,MAAAA,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiBC,OAAO,IAAI;AACxB,YAAIA,OAAO,CAACC,IAAR,KAAiBC,MAAM,CAACL,KAAD,CAA3B,EAAoC;AAChCC,UAAAA,IAAI,CAACD,KAAD,CAAJ,IAAeG,OAAO,CAACG,KAAvB;AACH;AACJ,OAJD;AASH,KAdmE,CAgBpE;AACA;AACA;AACA;;AAEH,GArBK,CAAN;AAsBA,SAAO;AACHD,IAAAA,MADG;AAEHJ,IAAAA;AAFG,GAAP;AAKH,CA/BD;;AAiCA,SAASM,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B3B,QAAQ,CAAC;AACvC4B,IAAAA,QAAQ,EAAE;AAD6B,GAAD,CAA1C;AAGA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,CAAC,EAAD,CAAhD;;AAGA,QAAM+B,KAAK,GAAG,MAAM;AAChB,QAAIZ,IAAI,GAAG,EAAX;AACA,QAAII,MAAM,GAAG,EAAb;AAKAI,IAAAA,YAAY,CAAC;AACTJ,MAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CADC;AAETK,MAAAA,QAAQ,EAAE,CACN;AACII,QAAAA,KAAK,EAAE,iBADX;AAEIb,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,EAAhB,CAFV;AAGIc,QAAAA,WAAW,EAAE,mBAHjB;AAIIC,QAAAA,eAAe,EAAE;AAJrB,OADM;AAFD,KAAD,CAAZ;AAWAJ,IAAAA,eAAe,CAAC;AACZK,MAAAA,UAAU,EAAE,IADA;AAEZC,MAAAA,OAAO,EAAE;AACL3B,QAAAA,MAAM,EAAE;AACJ4B,UAAAA,QAAQ,EAAE;AADN,SADH;AAIL9B,QAAAA,KAAK,EAAE;AACH+B,UAAAA,OAAO,EAAE,IADN;AAEHC,UAAAA,IAAI,EAAE;AAFH;AAJF;AAFG,KAAD,CAAf;AAaH,GA/BD;;AAmCAxC,EAAAA,SAAS,CAAC,MAAM,CAIf,CAJQ,EAIN,EAJM,CAAT;AAQF,sBAEE;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,IAAI,EAAE2B,SAAX;AAAsB,MAAA,OAAO,EAAEG;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAMD;;GAxDQJ,K;;KAAAA,K;AA0DT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n} from \"chart.js\"\r\nimport {Bar, Line} from 'react-chartjs-2'\r\n\r\n\r\n\r\nimport { BarChart } from '../Components/Chart'\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n)\r\n\r\n\r\nconst getData = async () => {\r\n    \r\n\r\n\r\n    await axios.post(\"http://localhost:3001/getdatabase/weeks\").then(res => {\r\n        \r\n\r\n        for (let index = 0; index <= 51; index++) {\r\n            \r\n            res.data.forEach(element => {\r\n                if (element.week === labels[index]) {\r\n                    data[index] += element.hours\r\n                }\r\n            });\r\n            \r\n\r\n            \r\n            \r\n        }\r\n        \r\n        // res.data.forEach(element => {\r\n        //     labels.push(element.week)\r\n        //     data.push(element.hours)\r\n        // });\r\n\r\n    })\r\n    return {\r\n        labels,\r\n        data\r\n        \r\n    }\r\n}\r\n\r\nfunction Weeks() {\r\n    const [chartData, setChartData] = useState({\r\n        datasets: []\r\n    })\r\n    const [chartOptions, setChartOptions] = useState({})\r\n    \r\n\r\n    const chart = () => {\r\n        let data = []\r\n        let labels = []\r\n\r\n\r\n\r\n\r\n        setChartData({\r\n            labels: [\"v1\", \"v2\", \"v3\", \"v4\"],\r\n            datasets: [\r\n                {\r\n                    label: \"Arbetade timmar\",\r\n                    data: [140, 130, 160, 90],\r\n                    borderColor: \"rgb(53, 162, 235)\",\r\n                    backgroundColor: \"rgba(53, 162, 235, 0.4)\"\r\n                }\r\n            ]\r\n        })\r\n        setChartOptions({\r\n            responsive: true,\r\n            plugins: {\r\n                Legend: {\r\n                    position: \"top\"\r\n                },\r\n                Title: {\r\n                    display: true,\r\n                    text: \"Hours worked\"\r\n                }\r\n            }\r\n        }) \r\n\r\n    }\r\n          \r\n      \r\n\r\n    useEffect(() => {\r\n        \r\n        \r\n        \r\n    }, [])\r\n    \r\n    \r\n    \r\n  return (\r\n    \r\n    <div>\r\n        <Bar data={chartData} options={chartOptions} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weeks"]},"metadata":{},"sourceType":"module"}
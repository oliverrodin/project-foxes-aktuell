{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\project-foxes-aktuell\\\\frontend\\\\src\\\\Pages\\\\Project.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Formik, Form, yupToFormErrors } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport \"./Project.css\";\nimport CustomTextInput from \"../Components/CustomTextInput\";\nimport CustomSelect from \"../Components/CustomSelect\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Project() {\n  _s();\n\n  const navigate = useNavigate();\n  const [person, setPerson] = useState([]);\n  const [project, setProject] = useState([]);\n  const [filtProject, setFiltProject] = useState([]);\n  const [dateFrom, setDateFrom] = useState(\"\");\n  const [dateTo, setDateTo] = useState(\"\");\n  const [isPressed, setIsPressed] = useState(false);\n  const [projectName, setProjectName] = useState(\"\");\n  let sumHours = 0;\n\n  const summing = () => {\n    const results = filtProject.map(row => {\n      return sumHours += row.hours;\n    });\n  };\n\n  useEffect(() => {\n    axios.post(\"http://localhost:3001/project/getprojects\", {\n      data: \"\"\n    }, {\n      headers: {\n        accessToken: sessionStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setProject(response.data);\n    });\n    axios.post(\"http://localhost:3001/project/people\", {\n      data: \"\"\n    }, {\n      headers: {\n        accessToken: sessionStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setPerson(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-page\",\n      children: [/*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          person: \"\",\n          project: \"\",\n          dateFrom: \"\",\n          dateTo: \"\"\n        },\n        validationSchema: Yup.object().shape({\n          person: Yup.string().required(),\n          project: Yup.string().required(),\n          dateFrom: Yup.string().required(),\n          dateTo: Yup.string().required()\n        }),\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting,\n            resetForm\n          } = _ref;\n\n          if (values.person === \"b0c48f83-d4ee-4006-85fb-fa3f505dc9ff\" && values.project === \"Alla projekt\") {\n            axios.post(\"http://localhost:3001/project/justdate\", values, {\n              headers: {\n                accessToken: sessionStorage.getItem(\"accessToken\")\n              }\n            }).then(res => {\n              setFiltProject(res.data);\n              console.log(values.dateFrom);\n            });\n            setProjectName(values.project);\n          } else if (values.person !== \"b0c48f83-d4ee-4006-85fb-fa3f505dc9ff\" && values.project !== \"Alla projekt\") {\n            axios.post(\"http://localhost:3001/project/unique\", values, {\n              headers: {\n                accessToken: sessionStorage.getItem(\"accessToken\")\n              }\n            }).then(res => {\n              setFiltProject(res.data);\n              console.log(values.dateFrom);\n            });\n            setProjectName(values.project);\n          } else {\n            axios.post(\"http://localhost:3001/project\", values, {\n              headers: {\n                accessToken: sessionStorage.getItem(\"accessToken\")\n              }\n            }).then(res => {\n              setFiltProject(res.data);\n              console.log(values.dateFrom);\n            });\n            setProjectName(values.project);\n          }\n\n          console.log(projectName);\n          setDateFrom(values.dateFrom);\n          setDateTo(values.dateTo);\n          setTimeout(() => {\n            resetForm();\n            setSubmitting(false);\n            setIsPressed(true);\n          }, 2000);\n          console.log(values);\n        },\n        children: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: isPressed ? \" \" : \"Välj projekt och tidspan för att se mer information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: \"admin-container\",\n            children: [/*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"admin-form\",\n              label: \"Medarbetare\",\n              name: \"person\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"V\\xE4lj medarbetare\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"b0c48f83-d4ee-4006-85fb-fa3f505dc9ff\",\n                children: \"Alla medarbetare\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), person.map(pages => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: pages.id,\n                    children: pages.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"admin-form\",\n              label: \"Projekt\",\n              name: \"project\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"V\\xE4lj projekt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Alla projekt\",\n                children: \"Alla projekt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this), project.map(pages => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: pages.name,\n                    children: pages.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              className: \"admin-form\",\n              label: \"Fr\\xE5n: \",\n              name: \"dateFrom\",\n              type: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              className: \"admin-form\",\n              label: \"Till: \",\n              name: \"dateTo\",\n              type: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"admin-form admin-button\",\n              children: props.isSubmitting ? \"loading...\" : \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filtered-reports-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: isPressed ? \"Projekt: \" + projectName : \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), filtProject.map(row => {\n          return /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"admin-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"admin-card-line\",\n              children: \"Datum: \" + row.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Namn: \" + row.personName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Timmar: \" + row.hours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [summing(), isPressed ? \"Totalt \" + sumHours + \" timmar\" : \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [isPressed ? \"Vald period: \" + dateFrom + \" - \" : \" \", \" \", isPressed ? dateTo : \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Project, \"YYhhWfMLRYxcMJNBze7ETGNentE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["C:/REACT/project-foxes-aktuell/frontend/src/Pages/Project.js"],"names":["React","useState","useEffect","useNavigate","Formik","Form","yupToFormErrors","Yup","axios","CustomTextInput","CustomSelect","Navbar","Project","navigate","person","setPerson","project","setProject","filtProject","setFiltProject","dateFrom","setDateFrom","dateTo","setDateTo","isPressed","setIsPressed","projectName","setProjectName","sumHours","summing","results","map","row","hours","post","data","headers","accessToken","sessionStorage","getItem","then","response","object","shape","string","required","values","setSubmitting","resetForm","res","console","log","setTimeout","props","pages","id","name","isSubmitting","date","personName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Formik, Form, yupToFormErrors } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport \"./Project.css\";\r\n\r\nimport CustomTextInput from \"../Components/CustomTextInput\";\r\nimport CustomSelect from \"../Components/CustomSelect\";\r\n\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction Project() {\r\n  const navigate = useNavigate();\r\n  const [person, setPerson] = useState([]);\r\n  const [project, setProject] = useState([]);\r\n  const [filtProject, setFiltProject] = useState([]);\r\n  const [dateFrom, setDateFrom] = useState(\"\");\r\n  const [dateTo, setDateTo] = useState(\"\");\r\n  const [isPressed, setIsPressed] = useState(false);\r\n  const [projectName, setProjectName] = useState(\"\")\r\n\r\n  let sumHours = 0;\r\n\r\n  const summing = () => {\r\n    const results = filtProject.map((row) => {\r\n      return (sumHours += row.hours);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"http://localhost:3001/project/getprojects\",\r\n        { data: \"\" },\r\n        {\r\n          headers: {\r\n            accessToken:\r\n              sessionStorage.getItem(\"accessToken\"),\r\n          },\r\n        },\r\n      )\r\n      .then((response) => {\r\n        setProject(response.data);\r\n      });\r\n    axios\r\n      .post(\r\n        \"http://localhost:3001/project/people\",\r\n        { data: \"\" },\r\n        {\r\n          headers: {\r\n            accessToken:\r\n              sessionStorage.getItem(\"accessToken\"),\r\n          },\r\n        },\r\n      )\r\n      .then((response) => {\r\n        setPerson(response.data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div >\r\n      <Navbar />\r\n      <div className='project-page'>\r\n        <Formik\r\n          initialValues={{\r\n            person: \"\",\r\n            project: \"\",\r\n            dateFrom: \"\",\r\n            dateTo: \"\",\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            person: Yup.string().required(),\r\n            project: Yup.string().required(),\r\n            dateFrom: Yup.string().required(),\r\n            dateTo: Yup.string().required(),\r\n          })}\r\n          onSubmit={(\r\n            values,\r\n            { setSubmitting, resetForm },\r\n          ) => {\r\n            if (\r\n              values.person ===\r\n                \"b0c48f83-d4ee-4006-85fb-fa3f505dc9ff\" &&\r\n              values.project === \"Alla projekt\"\r\n            ) {\r\n              axios\r\n                .post(\r\n                  \"http://localhost:3001/project/justdate\",\r\n                  values,\r\n                  {\r\n                    headers: {\r\n                      accessToken:\r\n                        sessionStorage.getItem(\r\n                          \"accessToken\",\r\n                        ),\r\n                    },\r\n                  },\r\n                )\r\n                .then((res) => {\r\n                  setFiltProject(res.data);\r\n                  console.log(values.dateFrom);\r\n                });\r\n                setProjectName(values.project)\r\n            } else if (values.person !== \"b0c48f83-d4ee-4006-85fb-fa3f505dc9ff\" &&\r\n            values.project !== \"Alla projekt\") {\r\n              axios\r\n                .post(\r\n                  \"http://localhost:3001/project/unique\",\r\n                  values,\r\n                  {\r\n                    headers: {\r\n                      accessToken:\r\n                        sessionStorage.getItem(\r\n                          \"accessToken\",\r\n                        ),\r\n                    },\r\n                  },\r\n                )\r\n                .then((res) => {\r\n                  setFiltProject(res.data);\r\n                  console.log(values.dateFrom);\r\n                });\r\n                setProjectName(values.project)\r\n            }else {\r\n              axios\r\n                .post(\r\n                  \"http://localhost:3001/project\",\r\n                  values,\r\n                  {\r\n                    headers: {\r\n                      accessToken:\r\n                        sessionStorage.getItem(\r\n                          \"accessToken\",\r\n                        ),\r\n                    },\r\n                  },\r\n                )\r\n                .then((res) => {\r\n                  setFiltProject(res.data);\r\n                  console.log(values.dateFrom);\r\n                });\r\n                setProjectName(values.project)\r\n            }\r\n            console.log(projectName)\r\n            setDateFrom(values.dateFrom);\r\n            setDateTo(values.dateTo);\r\n\r\n            setTimeout(() => {\r\n              resetForm();\r\n              setSubmitting(false);\r\n              setIsPressed(true);\r\n            }, 2000);\r\n\r\n            console.log(values);\r\n          }}>\r\n          {(props) => (\r\n            <>\r\n              <h3>\r\n                {isPressed\r\n                  ? \" \"\r\n                  : \"Välj projekt och tidspan för att se mer information\"}\r\n              </h3>\r\n              <Form className='admin-container'>\r\n                <CustomSelect\r\n                  className='admin-form'\r\n                  label='Medarbetare'\r\n                  name='person'>\r\n                  <option value=''>Välj medarbetare</option>\r\n                  <option value='b0c48f83-d4ee-4006-85fb-fa3f505dc9ff'>\r\n                    Alla medarbetare\r\n                  </option>\r\n                  {person.map((pages) => {\r\n                    return (\r\n                      <>\r\n                        <option value={pages.id}>\r\n                          {pages.name}\r\n                        </option>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </CustomSelect>\r\n\r\n                <CustomSelect\r\n                  className='admin-form'\r\n                  label='Projekt'\r\n                  name='project'>\r\n                  <option value=''>Välj projekt</option>\r\n                  <option value='Alla projekt'>\r\n                    Alla projekt\r\n                  </option>\r\n                  {project.map((pages) => {\r\n                    return (\r\n                      <>\r\n                        <option value={pages.name}>\r\n                          {pages.name}\r\n                        </option>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </CustomSelect>\r\n                <CustomTextInput\r\n                  className='admin-form'\r\n                  label='Från: '\r\n                  name='dateFrom'\r\n                  type='date'\r\n                />\r\n                <CustomTextInput\r\n                  className='admin-form'\r\n                  label='Till: '\r\n                  name='dateTo'\r\n                  type='date'\r\n                />\r\n\r\n                <button\r\n                  type='submit'\r\n                  className='admin-form admin-button'>\r\n                  {props.isSubmitting\r\n                    ? \"loading...\"\r\n                    : \"Submit\"}\r\n                </button>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n\r\n        <div className='filtered-reports-container'>\r\n          <h1>\r\n            {isPressed\r\n              ? \"Projekt: \" + projectName\r\n              : \" \"}\r\n          </h1>\r\n\r\n          {filtProject.map((row) => {\r\n            return (\r\n              <ul className=\"admin-card\">\r\n                <li className=\"admin-card-line\">{\"Datum: \" + row.date}</li>\r\n                <li>{\"Namn: \" + row.personName}</li>\r\n                <li>{\"Timmar: \" + row.hours}</li>\r\n              </ul>\r\n            );\r\n          })}\r\n\r\n          <h3>\r\n            {summing()}\r\n            {isPressed\r\n              ? \"Totalt \" + sumHours + \" timmar\"\r\n              : \" \"}\r\n          </h3>\r\n          <h3>\r\n            {isPressed\r\n              ? \"Vald period: \" + dateFrom + \" - \"\r\n              : \" \"}{\" \"}\r\n            {isPressed ? dateTo : \" \"}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n"]},"metadata":{},"sourceType":"module"}
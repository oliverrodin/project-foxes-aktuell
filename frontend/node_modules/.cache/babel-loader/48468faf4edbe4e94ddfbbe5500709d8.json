{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\project-foxes-aktuell\\\\frontend\\\\src\\\\Pages\\\\Project.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport './Project.css';\nimport CustomTextInput from '../Components/CustomTextInput';\nimport CustomSelect from '../Components/CustomSelect';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Project() {\n  _s();\n\n  const navigate = useNavigate();\n  const [project, setProject] = useState([]);\n  const [filtProject, setFiltProject] = useState([]);\n  useEffect(() => {\n    axios.post(\"http://localhost:3001/project/getprojects\", {\n      data: \"\"\n    }, {\n      headers: {\n        accessToken: sessionStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setProject(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-page\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          project: \"\",\n          dateFrom: \"\",\n          dateTo: \"\"\n        },\n        validationSchema: Yup.object().shape({\n          project: Yup.string().required(),\n          dateFrom: Yup.string().required(),\n          dateTo: Yup.string().required()\n        }),\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting,\n            resetForm\n          } = _ref;\n          axios.post('http://localhost:3001/project', values, {\n            headers: {\n              accessToken: sessionStorage.getItem(\"accessToken\")\n            }\n          }).then(res => {\n            setFiltProject(res.data);\n            console.log(res.data);\n          });\n          setTimeout(() => {\n            resetForm();\n            setSubmitting(false);\n          }, 2000);\n          console.log(values);\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n            className: \"\",\n            label: \"Project\",\n            name: \"project\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), project.map(pages => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pages.name,\n                  children: pages.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            className: \"\",\n            label: \"From: \",\n            name: \"dateFrom\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            className: \"\",\n            label: \"To: \",\n            name: \"dateTo\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"\",\n            children: props.isSubmitting ? 'loading...' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Project, \"MbtZkM/sY2dyYQ5qEq4SHY7FDms=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["C:/REACT/project-foxes-aktuell/frontend/src/Pages/Project.js"],"names":["React","useState","useEffect","useNavigate","Formik","Form","Yup","axios","CustomTextInput","CustomSelect","Navbar","Project","navigate","project","setProject","filtProject","setFiltProject","post","data","headers","accessToken","sessionStorage","getItem","then","response","dateFrom","dateTo","object","shape","string","required","values","setSubmitting","resetForm","res","console","log","setTimeout","props","map","pages","name","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Formik, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\nimport './Project.css'\r\n\r\nimport CustomTextInput from '../Components/CustomTextInput'\r\nimport CustomSelect from '../Components/CustomSelect'\r\n\r\nimport Navbar from './Navbar'\r\n\r\n\r\nfunction Project() {\r\n    const navigate = useNavigate();\r\n    const [project, setProject] = useState([])\r\n    const [filtProject, setFiltProject] = useState([])\r\n\r\n    \r\n\r\n    useEffect(()  => {\r\n        axios.post(\"http://localhost:3001/project/getprojects\", {data: \"\"}, { headers: {\r\n         accessToken: sessionStorage.getItem(\"accessToken\")\r\n       }}).then((response) => {\r\n           setProject(response.data)\r\n           \r\n           \r\n         }) \r\n   \r\n       }, [])\r\n  return (\r\n    <>\r\n        <Navbar />\r\n        <div className='project-page'>  \r\n        <Formik\r\n          initialValues={{\r\n            project: \"\",\r\n            dateFrom: \"\",\r\n            dateTo: \"\",\r\n          }}\r\n          validationSchema={\r\n            Yup.object().shape({\r\n            project: Yup.string().required(),\r\n            dateFrom: Yup.string().required(),\r\n            dateTo: Yup.string().required()\r\n          })}\r\n          onSubmit={(values, {setSubmitting, resetForm}) => {\r\n            axios\r\n              .post('http://localhost:3001/project', \r\n                values,\r\n                {\r\n                  headers: {\r\n                    accessToken: sessionStorage.getItem(\"accessToken\")\r\n                  }\r\n                }\r\n              ).then((res) => {\r\n                    setFiltProject(res.data)\r\n                    console.log(res.data)\r\n              })\r\n              \r\n              setTimeout(() => {\r\n                \r\n                resetForm();\r\n                setSubmitting(false)\r\n              }, 2000)\r\n              \r\n              console.log(values)\r\n            \r\n            \r\n          }}\r\n          >\r\n          {props => (\r\n          <Form className=\"\">\r\n            <h1>Project</h1>\r\n            <CustomSelect className=\"\" label=\"Project\" name=\"project\">\r\n              <option value=\"\">Select Project</option>  \r\n              {\r\n                project.map((pages) => {\r\n                  return (\r\n                    <>\r\n                      <option value={pages.name}>{pages.name}</option> \r\n                    </>\r\n                  )\r\n                  \r\n                })\r\n              }\r\n            </CustomSelect>   \r\n            <CustomTextInput className=\"\" label=\"From: \" name=\"dateFrom\" type=\"date\"/>\r\n            <CustomTextInput className=\"\" label=\"To: \" name=\"dateTo\" type=\"date\"/>\r\n            \r\n            \r\n            \r\n\r\n            <button type='submit' className=\"\">{props.isSubmitting ? 'loading...' : 'Submit'}</button>\r\n          </Form>\r\n          )}\r\n        </Formik>\r\n\r\n  \r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Project"]},"metadata":{},"sourceType":"module"}
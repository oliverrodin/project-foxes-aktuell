{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\project-foxes-aktuell\\\\frontend\\\\src\\\\Pages\\\\Project.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport './Project.css';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Project() {\n  axios.post('http://localhost:3001/project', {\n    data: \"\"\n  }, {\n    headers: {\n      accessToken: sessionStorage.getItem(\"accessToken\")\n    }\n  }).then(response => {\n    console.log(response.data);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-page\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          project: \"\",\n          date: \"\",\n          hours: \"\",\n          note: \"\",\n          comment: \"\"\n        },\n        validationSchema: Yup.object().shape({\n          project: Yup.string().required(),\n          date: Yup.date().required(),\n          hours: Yup.number().required(),\n          note: Yup.string().required(),\n          comment: Yup.string().required()\n        }),\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting,\n            resetForm\n          } = _ref;\n          axios.post('http://localhost:3001/createtimereports', values, {\n            headers: {\n              accessToken: sessionStorage.getItem(\"accessToken\")\n            }\n          });\n          setTimeout(() => {\n            navigate(\"/home\");\n            resetForm();\n            setSubmitting(false);\n          }, 2000); // fetch('http://localhost:3001/createtimereports',{\n          //   method: 'POST',\n          //   url: 'https://api.notion.com/v1/pages',\n          //   body: (\n          //     JSON.stringify(values)),\n          //   headers: { \"Content-Type\": 'application/json'}\n          // }) \n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Create time report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n            className: \"timeReportInput\",\n            label: \"Project\",\n            name: \"project\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), project.map(pages => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pages.id,\n                  children: pages.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            className: \"timeReportInput\",\n            label: \"Date\",\n            name: \"date\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            className: \"timeReportInput\",\n            label: \"Hours\",\n            name: \"hours\",\n            type: \"number\",\n            placeholder: \"ex. 10...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            className: \"timeReportInput\",\n            label: \"Note\",\n            name: \"note\",\n            type: \"text\",\n            placeholder: \"ex. meeting...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            className: \"timeReportInput\",\n            label: \"Comment\",\n            name: \"comment\",\n            type: \"text\",\n            placeholder: \"ex. fixed this bug...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btnPos\",\n            children: props.isSubmitting ? 'loading...' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["C:/REACT/project-foxes-aktuell/frontend/src/Pages/Project.js"],"names":["React","axios","Navbar","Project","post","data","headers","accessToken","sessionStorage","getItem","then","response","console","log","project","date","hours","note","comment","Yup","object","shape","string","required","number","values","setSubmitting","resetForm","setTimeout","navigate","props","map","pages","id","name","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nimport './Project.css'\r\n\r\nimport Navbar from './Navbar'\r\n\r\nfunction Project() {\r\n    axios.post('http://localhost:3001/project', {data: \"\"},\r\n    { headers: {accessToken: sessionStorage.getItem(\"accessToken\")}}).then((response) => {\r\n        console.log(response.data)\r\n    })\r\n  return (\r\n    <>\r\n        <Navbar />\r\n        <div className='project-page'>  \r\n        <Formik\r\n          initialValues={{\r\n            \r\n            project: \"\",\r\n            date: \"\",\r\n            hours: \"\",\r\n            note:\"\",\r\n            comment:\"\"\r\n          }}\r\n          validationSchema={\r\n            Yup.object().shape({\r\n            project: Yup.string().required(),\r\n            date: Yup.date().required(),\r\n            hours:Yup.number().required(),\r\n            note: Yup.string().required(),\r\n            comment: Yup.string().required()\r\n          })}\r\n          onSubmit={(values, {setSubmitting, resetForm}) => {\r\n            axios\r\n              .post('http://localhost:3001/createtimereports', \r\n                values,\r\n                {\r\n                  headers: {\r\n                    accessToken: sessionStorage.getItem(\"accessToken\")\r\n                  }\r\n                }\r\n              )\r\n              \r\n              setTimeout(() => {\r\n                navigate(\"/home\")\r\n                resetForm();\r\n                setSubmitting(false)\r\n              }, 2000)\r\n              \r\n              \r\n            // fetch('http://localhost:3001/createtimereports',{\r\n            //   method: 'POST',\r\n            //   url: 'https://api.notion.com/v1/pages',\r\n            //   body: (\r\n            //     JSON.stringify(values)),\r\n            //   headers: { \"Content-Type\": 'application/json'}\r\n            // }) \r\n\r\n            \r\n          }}\r\n          >\r\n          {props => (\r\n          <Form className=\"container\">\r\n            <h1>Create time report</h1>\r\n            <CustomSelect className=\"timeReportInput\" label=\"Project\" name=\"project\">\r\n              <option value=\"\">Select Project</option>  \r\n              {\r\n                project.map((pages) => {\r\n                  return (\r\n                    <>\r\n                      <option value={pages.id}>{pages.name}</option> \r\n                    </>\r\n                  )\r\n                  \r\n                })\r\n              }\r\n            </CustomSelect>   \r\n            <CustomTextInput className=\"timeReportInput\" label=\"Date\" name=\"date\" type=\"date\"/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Hours\" name=\"hours\" type=\"number\" placeholder='ex. 10...'/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Note\" name=\"note\" type=\"text\" placeholder='ex. meeting...'/>\r\n            <CustomTextInput className=\"timeReportInput\" label=\"Comment\" name=\"comment\" type=\"text\" placeholder='ex. fixed this bug...'/>\r\n            \r\n            \r\n\r\n            <button type='submit' className=\"btnPos\">{props.isSubmitting ? 'loading...' : 'Submit'}</button>\r\n          </Form>\r\n          )}\r\n        </Formik>  \r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Project"]},"metadata":{},"sourceType":"module"}
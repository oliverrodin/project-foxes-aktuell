{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\group-project-foxes-2\\\\frontend\\\\src\\\\Pages\\\\CreateReport.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage, Select } from \"formik\";\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst database_id = '58d96ae9275547a7960f5cca7c93e836';\n\nfunction CreateReport() {\n  _s();\n\n  const [project, setProject] = useState([]);\n  useEffect(() => {\n    axios.post(\"http://localhost:3001/getproject\").then(response => {\n      setProject(response);\n    });\n    console.log(project);\n  }, []);\n  const initialValues = {\n    person: \"\",\n    project: \"\",\n    date: \"\",\n    hours: \"\",\n    note: \"\",\n    comment: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    person: Yup.string().required(),\n    project: Yup.string().required(),\n    date: Yup.date().required(),\n    hours: Yup.number().required(),\n    note: Yup.string().required(),\n    comment: Yup.string().required()\n  });\n\n  const onSubmit = data => {\n    fetch('http://localhost:3001/createtimereports', {\n      method: 'POST',\n      url: 'https://api.notion.com/v1/pages',\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": 'application/json'\n      }\n    });\n    console.log(JSON.stringify(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createReportPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input\",\n          children: \"Person:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"Person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreateReport\",\n          name: \"person\",\n          placeholder: \"(Ex. Oliver....)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input\",\n          children: \"Project:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"color\"\n          /*value={\"\"}\r\n          onChange={\"\"}\r\n          onBlur={\"\"} */\n          ,\n          style: {\n            display: 'block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            label: \"Select a project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), project.map(name => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: name.id,\n                label: name.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"blue\",\n                label: \"blue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"green\",\n                label: \"green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreateReport\",\n          type: \"date\",\n          name: \"date\",\n          placeholder: \"(Ex. 2022-11-13...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input\",\n          children: \"Hours:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreateReport\",\n          name: \"hours\",\n          placeholder: \"(Ex. 11...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input\",\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreateReport\",\n          name: \"note\",\n          placeholder: \"(Ex. meeting....)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input\",\n          children: \"Comment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreateReport\",\n          name: \"comment\",\n          placeholder: \"(Ex. fixed this bug....)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: \"Save Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateReport, \"0/XdUihKyW7xYXfoPs8i3rCVMLc=\");\n\n_c = CreateReport;\nexport default CreateReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateReport\");","map":{"version":3,"sources":["C:/REACT/group-project-foxes-2/frontend/src/Pages/CreateReport.js"],"names":["React","useEffect","useState","Formik","Form","Field","ErrorMessage","Select","Yup","axios","database_id","CreateReport","project","setProject","post","then","response","console","log","initialValues","person","date","hours","note","comment","validationSchema","object","shape","string","required","number","onSubmit","data","fetch","method","url","body","JSON","stringify","headers","display","map","name","id"],"mappings":"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","sourcesContent":["import {React, useEffect, useState}from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage, Select } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport axios from \"axios\";\r\n\r\nconst database_id = '58d96ae9275547a7960f5cca7c93e836'\r\n\r\nfunction CreateReport() {\r\n    const [project, setProject] = useState([])\r\n    \r\n    useEffect( () => {\r\n      axios.post(\"http://localhost:3001/getproject\").then((response) => {\r\n        setProject(response)\r\n      }) \r\n      console.log(project)\r\n    }, [])\r\n\r\n    \r\n    \r\n    const initialValues = {\r\n        person: \"\",\r\n        project: \"\",\r\n        date: \"\",\r\n        hours: \"\",\r\n        note:\"\",\r\n        comment:\"\"\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        person: Yup.string().required(),\r\n        project: Yup.string().required(),\r\n        date: Yup.date().required(),\r\n        hours:Yup.number().required(),\r\n        note: Yup.string().required(),\r\n        comment: Yup.string().required()\r\n    })\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        fetch('http://localhost:3001/createtimereports',{\r\n        method: 'POST',\r\n        url: 'https://api.notion.com/v1/pages',\r\n        body: (\r\n          JSON.stringify(data)),\r\n        headers: { \"Content-Type\": 'application/json' }\r\n      }) \r\n\r\n       \r\n\r\n       console.log(JSON.stringify(data))\r\n      \r\n    };\r\n  return (\r\n    <div className='createReportPage'>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}>\r\n        <Form className=\"container\">\r\n          <label className=\"input\">Person:</label>\r\n          <ErrorMessage name=\"Person\"/>\r\n          <Field\r\n            id='inputCreateReport'\r\n            name='person'\r\n            placeholder='(Ex. Oliver....)'\r\n          />\r\n          <label className=\"input\">Project:</label>\r\n          \r\n          <select\r\n            name=\"color\"\r\n            /*value={\"\"}\r\n            onChange={\"\"}\r\n            onBlur={\"\"} */\r\n            style={{ display: 'block' }}\r\n          >\r\n            <option value=\"\" label=\"Select a project\" />\r\n            {\r\n              project.map((name) => {\r\n                return (\r\n                  <>\r\n                    <option value={name.id} label={name.name} />\r\n                    <option value=\"blue\" label=\"blue\" />\r\n                    <option value=\"green\" label=\"green\" />\r\n                  </>\r\n                )\r\n              })\r\n            }\r\n            \r\n          </select>\r\n          <label className=\"input\">Date:</label>\r\n          <Field\r\n            id='inputCreateReport'\r\n            type=\"date\"\r\n            name='date'\r\n            placeholder='(Ex. 2022-11-13...)'\r\n          />\r\n          <label className=\"input\">Hours:</label>\r\n          <Field\r\n            id='inputCreateReport'\r\n            name='hours'\r\n            placeholder='(Ex. 11...)'\r\n          />\r\n          <label className=\"input\">Note:</label>\r\n          <Field\r\n            id='inputCreateReport'\r\n            name='note'\r\n            placeholder='(Ex. meeting....)'\r\n          />\r\n          <label className=\"input\">Comment:</label>\r\n          <Field\r\n            \r\n            id='inputCreateReport'\r\n            name='comment'\r\n            placeholder='(Ex. fixed this bug....)'\r\n          />\r\n\r\n          <button type='submit' className=\"button\">Save Report</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateReport;\r\n"]},"metadata":{},"sourceType":"module"}
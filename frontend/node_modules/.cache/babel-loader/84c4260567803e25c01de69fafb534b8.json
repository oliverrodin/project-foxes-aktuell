{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wille\\\\Desktop\\\\project-foxes-aktuell\\\\frontend\\\\src\\\\Pages\\\\Weeks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Chart } from 'react-chartjs-2';\nimport './weeks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction Weeks() {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    datasets: []\n  });\n\n  const chart = () => {\n    const labels = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52'];\n    const data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    axios.post(\"http://localhost:3001/getdatabase/weeks\").then(res => {\n      for (let index = 0; index <= 51; index++) {\n        res.data.forEach(element => {\n          if (element.week === labels[index]) {\n            data[index] += element.hours;\n          }\n        });\n      }\n\n      console.log(data);\n      setChartData({\n        labels: labels,\n        datasets: [{\n          label: \"Arbetade timmar\",\n          data: data,\n          borderColor: \"rgb(252, 184, 113)\",\n          backgroundColor: \"rgb(252, 184, 113, 0.6)\"\n        }]\n      });\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Arbetade timmar per vecka\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      id: \"myChart\",\n      name: \"chart\",\n      type: \"bar\",\n      data: chartData,\n      options: {\n        responsive: true,\n        Legend: {\n          position: \"top\"\n        },\n        Title: {\n          display: true,\n          text: \"Hours worked\"\n        },\n        layout: {\n          padding: {\n            right: 18\n          }\n        },\n        scales: {\n          y: {\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 10,\n              beginAtZero: true\n            },\n            grid: {\n              display: false\n            }\n          },\n          x: {\n            grid: {\n              display: false\n            }\n          }\n        },\n        maintainAspectRatio: false,\n        pan: {\n          enabled: true,\n          mode: \"x\",\n          speed: 10\n        },\n        zoom: {\n          enabled: true,\n          drag: false,\n          mode: \"x\",\n          rangeMin: {\n            x: 0,\n            y: 0\n          },\n          rangeMax: {}\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weeks, \"YpnNWYZlMQFcIeoCAsPh5+AHj38=\");\n\n_c = Weeks;\nexport default Weeks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weeks\");","map":{"version":3,"sources":["C:/Users/Wille/Desktop/project-foxes-aktuell/frontend/src/Pages/Weeks.js"],"names":["React","useEffect","useState","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","register","Weeks","chartData","setChartData","datasets","chart","labels","data","post","then","res","index","forEach","element","week","hours","console","log","label","borderColor","backgroundColor","responsive","position","display","text","layout","padding","right","scales","y","ticks","autoSkip","maxTicksLimit","beginAtZero","grid","x","maintainAspectRatio","pan","enabled","mode","speed","zoom","drag","rangeMin","rangeMax"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n} from \"chart.js\"\r\nimport {Chart} from 'react-chartjs-2'\r\n\r\nimport './weeks.css'\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n)\r\n\r\n\r\n\r\n\r\n\r\nfunction Weeks() {\r\n    const [chartData, setChartData] = useState({\r\n        datasets: []\r\n    })\r\n\r\n\r\n  \r\n     \r\n\r\n    const chart = () => {\r\n        const labels = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52']\r\n        const data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0]\r\n\r\n        axios.post(\"http://localhost:3001/getdatabase/weeks\").then(res => {\r\n            for (let index = 0; index <= 51; index++) {\r\n            \r\n                res.data.forEach(element => {\r\n                    if (element.week === labels[index]) {\r\n                        data[index] += element.hours\r\n                    }\r\n                }); \r\n            \r\n                \r\n\r\n                \r\n            }\r\n            console.log(data)\r\n            setChartData({\r\n                labels: labels,\r\n                datasets: [\r\n                    {\r\n                        label: \"Arbetade timmar\",\r\n                        data: data,\r\n                        borderColor: \"rgb(252, 184, 113)\",\r\n                        backgroundColor: \"rgb(252, 184, 113, 0.6)\"\r\n                    }\r\n                ]\r\n                \r\n            })\r\n             \r\n        \r\n        \r\n    })\r\n\r\n    \r\n\r\n        \r\n\r\n    }\r\n          \r\n   \r\n\r\n    useEffect(() => {\r\n        \r\n        chart()\r\n        \r\n        \r\n    }, [])\r\n    \r\n    \r\n    \r\n    \r\n  return (\r\n    \r\n    <div className='chart-container'>\r\n        <h2>Arbetade timmar per vecka</h2>\r\n        <Chart id=\"myChart\" name=\"chart\" type=\"bar\" data={chartData} options={{\r\n            responsive: true,\r\n            Legend: {\r\n                position: \"top\"\r\n            },\r\n            Title: {\r\n                display: true,\r\n                text: \"Hours worked\"\r\n            },\r\n            layout: {\r\n               padding: {\r\n                   right: 18\r\n               } \r\n            },\r\n            scales: {\r\n                y: {\r\n                    ticks: {\r\n                        autoSkip: true,\r\n                        maxTicksLimit: 10,\r\n                        beginAtZero: true,\r\n                        \r\n                    },\r\n                    grid: {\r\n                        display: false\r\n                    }\r\n                },\r\n                x: {\r\n                    grid: {\r\n                        display: false\r\n                    }\r\n                }\r\n            },\r\n            maintainAspectRatio: false,\r\n            pan: {\r\n                enabled: true,\r\n                mode: \"x\",\r\n                speed: 10,\r\n\r\n            },  \r\n            zoom: {\r\n                enabled: true,\r\n                drag: false,\r\n                mode: \"x\",\r\n                rangeMin: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                rangeMax: {\r\n\r\n                }\r\n\r\n            },  \r\n        }} \r\n        \r\n        />\r\n    \r\n    \r\n        \r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weeks"]},"metadata":{},"sourceType":"module"}